name: "Build for linux xx"
description: "Build bun for linux xx"

inputs:
  cpu:
    required: true
  tag:
    required: true
  arch:
    required: true
  build_arch:
    required: true
  runner:
    required: true
  webkit_url:
    required: true
  webkit_basename:
    required: true

runs:
  using: "composite"
  steps:
    - name: Checkout submodules
      run: git -c submodule."src/bun.js/WebKit".update=none submodule update --init --recursive --depth=1 --progress -j $(nproc)
    - uses: docker/setup-buildx-action@v2
      id: buildx
      with:
        install: true
    - name: Run
      run: |
        rm -rf ${{ runner.temp }}/release
    - name: Login to GitHub Container Registry
      uses: docker/login-action@v2
      with:
        registry: ghcr.io
        username: ${{  github.actor  }}
        password: ${{  secrets.GITHUB_TOKEN  }}
    - name: Build and push
      uses: docker/build-push-action@v3
      with:
        context: .
        push: false
        tags: ghcr.io/oven-sh/bun:canary,ghcr.io/oven-sh/bun:${{ github.sha }}
        cache-from: type=registry,ref=ghcr.io/oven-sh/bun:buildcache-bust-3--${{ inputs.cpu }}-${{ inputs.build_arch }}
        cache-to: type=registry,ref=ghcr.io/oven-sh/bun:buildcache-bust-3--${{ inputs.cpu }}-${{ inputs.build_arch }},mode=max
        build-args: |
          ARCH=${{ inputs.arch }}
          BUILDARCH=${{ inputs.build_arch }}
          CPU_TARGET=${{ inputs.cpu }}
          GIT_SHA=${{ github.sha }}
          WEBKIT_URL=${{ inputs.webkit_url }}
          WEBKIT_BASENAME=${{ inputs.webkit_basename }}
        platforms: linux/${{ inputs.build_arch }}
        target: artifact
        outputs: type=local,dest=${{ runner.temp }}/release
    - name: Zip
      run: |
        # if zip is not found
        if [ ! -x "$(command -v zip)" ]; then
          sudo apt-get update && sudo apt-get install -y zip --no-install-recommends
        fi

        if [ ! -x "$(command -v strip)" ]; then
          sudo apt-get update && sudo apt-get install -y binutils --no-install-recommends
        fi

        cd ${{ runner.temp }}/release
        chmod +x bun-profile bun

        mkdir bun-${{ inputs.tag }}-profile
        mkdir bun-${{ inputs.tag }}

        strip bun

        mv bun-profile bun-${{ inputs.tag }}-profile/bun-profile
        mv bun bun-${{ inputs.tag }}/bun

        zip -r bun-${{ inputs.tag }}-profile.zip bun-${{ inputs.tag }}-profile
        zip -r bun-${{ inputs.tag }}.zip bun-${{ inputs.tag }}
    - uses: actions/upload-artifact@v3
      with:
        name: bun-${{ inputs.tag }}-profile
        path: ${{ runner.temp }}/release/bun-${{ inputs.tag }}-profile.zip
    - uses: actions/upload-artifact@v3
      with:
        name: bun-${{ inputs.tag }}
        path: ${{ runner.temp }}/release/bun-${{ inputs.tag }}.zip
    - name: Release
      id: release
      uses: softprops/action-gh-release@v1
      if: github.ref == 'refs/heads/main'
      with:
        prerelease: true
        generate_release_notes: true
        body: "This is the canary release of Bun that corresponds to the commit [${{ github.sha }}]"
        name: "Canary (${{ github.sha }})"
        tag_name: "canary"
        files: |
          ${{ runner.temp }}/release/bun-${{ inputs.tag }}.zip
          ${{ runner.temp }}/release/bun-${{ inputs.tag }}-profile.zip
    - uses: actions/upload-artifact@v3
      with:
        name: bun-obj-${{ inputs.tag }}
        path: ${{ runner.temp }}/release/bun-obj
    - uses: actions/upload-artifact@v3
      with:
        name: ${{ inputs.tag }}-dependencies
        path: ${{ runner.temp }}/release/bun-dependencies