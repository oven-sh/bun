name: Setup Bun
description: An internal version of the 'oven-sh/setup-bun' action.

inputs:
  bun-version:
    type: string
    description: "The version of bun to install: 'latest', 'canary', 'bun-v1.0.0', etc."
    default: latest
  workflow-run-id:
    type: string
    description: "The workflow run ID where to download bun."
  baseline:
    type: boolean
    description: "Whether to use the baseline version of bun."
    default: false
  add-to-path:
    type: boolean
    description: "Whether to add bun to PATH."
    default: true
  download-url:
    type: string
    description: "The base URL to download bun from."
    default: "https://pub-5e11e972747a44bf9aaf9394f185a982.r2.dev/releases"

outputs:
  os:
    description: "Operating system: 'darwin', 'linux', or 'windows'."
    value: ${{ steps.setup.outputs.os }}
  arch:
    description: "Architecture: 'aarch64' or 'x64'."
    value: ${{ steps.setup.outputs.arch }}
  target:
    description: "Target: 'bun-{os}-{arch}-[baseline]'."
    value: ${{ steps.setup.outputs.target }}
  release:
    description: "Release: 'latest', 'canary', or 'bun-v1.x.x'."
    value: ${{ steps.setup.outputs.release }}
  bun-path:
    description: "The path to Bun."
    value: ${{ steps.unpack.outputs.bun-path }}

runs:
  using: composite
  steps:
    - id: setup
      name: Setup Bun
      shell: bash
      run: |
        set -x
        case "$(uname -s)" in
          Linux*)  os=linux;;
          Darwin*) os=darwin;;
          *)       os=windows;;
        esac
        echo "os=${os}" >> $GITHUB_OUTPUT
        case "$(uname -m)" in
          arm64 | aarch64)  arch=aarch64;;
          *)                arch=x64;;
        esac
        echo "arch=${arch}" >> $GITHUB_OUTPUT
        case "${{ inputs.baseline }}" in
          true | 1) target="bun-${os}-${arch}-baseline" ;;
          *)        target="bun-${os}-${arch}" ;;
        esac
        echo "target=${target}" >> $GITHUB_OUTPUT
        case "${{ inputs.bun-version }}" in
          latest) release="latest" ;;
          canary) release="canary" ;;
          *)      release="bun-v${{ inputs.bun-version }}" ;;
        esac
        if [[ "${{ inputs.workflow-run-id }}" ]]; then
          release="workflow-${{ inputs.workflow-run-id }}"
        fi
        echo "release=${release}" >> $GITHUB_OUTPUT

    - if: ${{ inputs.workflow-run-id }}
      name: Download Bun from Github Actions
      uses: actions/download-artifact@v4
      with:
        github-token: ${{ github.token }}
        run-id: ${{ inputs.workflow-run-id }}
        name: ${{ steps.setup.outputs.target }}

    - if: ${{ !inputs.workflow-run-id }}
      name: Download Bun from URL
      shell: bash
      run: |
        set -x
        curl -LO ${{ inputs.download-url }}/${{ steps.setup.outputs.release }}/${{ steps.setup.outputs.target }}.zip

    - id: unpack
      name: Unpack Bun
      shell: bash
      run: |
        set -x
        target="${{ steps.setup.outputs.target }}"
        release="${{ steps.setup.outputs.release }}"
        mkdir -p ${target}/${release}
        unzip ${target}.zip -d ${target}
        mv ${target}/${target}/* ${target}/${release}/
        rm -rf ${target}/${target}
        rm -f ${target}.zip
        bin="$(pwd)/${target}/${release}"
        path="${bin}/bun"
        if [[ "${{ runner.os }}" == "Windows" ]]; then
          bin=$(cygpath -w ${bin})
          path=$(cygpath -w ${path})
        fi
        echo "bun-bin=${bin}" >> $GITHUB_OUTPUT
        echo "bun-path=${path}" >> ${GITHUB_OUTPUT}

    - if: ${{ inputs.add-to-path == 'true' }}
      name: Add Bun to Path
      shell: bash
      run: |
        set -x
        echo "${{ steps.unpack.outputs.bun-bin }}" >> ${GITHUB_PATH}
