name: Test

on:
  workflow_call:
    inputs:
      runs-on:
        type: string
        required: true
      tag:
        type: string
        required: true
      pr-number:
        type: string
        required: true
  workflow_dispatch:
    inputs:
      runs-on:
        type: string
        description: The runner used to run the tests
        required: true
      tag:
        type: string
        description: The tag of the build to use
        required: true
      pr-number:
        type: string
        description: The pull request from where to download Bun
        required: true

jobs:
  test:
    name: Test
    runs-on: ${{ inputs.runs-on }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          sparse-checkout: |
            package.json
            bun.lockb
            test
            packages/bun-internal-test
      - name: Setup Environment
        shell: bash
        run: |
          echo "${{ inputs.pr-number }}" > pr-number.txt
      - name: Download Bun
        uses: dawidd6/action-download-artifact@v3
        with:
          name: bun-${{ inputs.tag }}
          path: bun
          github_token: ${{ github.token }}
          pr: ${{ inputs.pr-number }}
          workflow_search: true
          workflow_conclusion: "" # ignore conclusion
          check_artifacts: true
          search_artifacts: true
      - if: ${{ runner.os == 'Windows' }}
        name: Setup Cygwin
        uses: secondlife/setup-cygwin@v3
        with:
          packages: bash
      - name: Setup Bun
        shell: bash
        run: |
          unzip bun/bun-*.zip
          cd bun-*
          if [ "$RUNNER_OS" == "Windows" ]; then
            pwd >> $env:GITHUB_PATH
          else
            pwd >> ${GITHUB_PATH}
          fi
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
      - name: Install Dependencies
        timeout-minutes: 5
        shell: bash
        run: |
          bun install
          bun install --cwd test
          bun install --cwd packages/bun-internal-test
      - name: Run Tests
        id: test
        timeout-minutes: 30
        shell: bash
        env:
          TMPDIR: ${{ runner.temp }}
          BUN_FEATURE_FLAG_INTERNAL_FOR_TESTING: "true"
          SMTP_SENDGRID_SENDER: ${{ secrets.SMTP_SENDGRID_SENDER }}
          TLS_MONGODB_DATABASE_URL: ${{ secrets.TLS_MONGODB_DATABASE_URL }}
          TLS_POSTGRES_DATABASE_URL: ${{ secrets.TLS_POSTGRES_DATABASE_URL }}
        run: |
          node packages/bun-internal-test/src/runner.node.mjs || true
      - if: ${{ always()}}
        name: Upload Results
        uses: actions/upload-artifact@v4
        with:
          name: bun-${{ inputs.tag }}-tests
          path: |
            test-report.*
            comment.md
            pr-number.txt
          if-no-files-found: error
          overwrite: true
      - if: ${{ failure() && github.repository_owner == 'oven-sh' }}
        name: Send Message
        uses: sarisia/actions-status-discord@v1
        with:
          webhook: ${{ secrets.DISCORD_WEBHOOK }}
          nodetail: true
          title: ""
          description: |
            ### ‚ùå [${{ github.event.pull_request.title }}](${{ github.event.pull_request.html_url }})

            @${{ github.actor }}, there are ${{ steps.test.outputs.failing_tests_count }} failing tests on bun-${{ inputs.tag }}.

            ${{ steps.test.outputs.failing_tests }}

            **[View logs](https://github.com/oven-sh/bun/actions/runs/${{ github.run_id }})**
      - name: Fail
        if: ${{ failure() }}
        run: |
          echo "There are ${{ steps.test.outputs.failing_tests_count || 'some' }} failing tests on bun-${{ inputs.tag }}."
          exit 1
