{
  "private": true,
  "name": "bun",
  "version": "1.2.15",
  "workspaces": [
    "./packages/bun-types",
    "./packages/@types/bun"
  ],
  "devDependencies": {
    "@types/react": "^18.3.3",
    "esbuild": "^0.21.4",
    "mitata": "^0.1.11",
    "peechy": "0.4.34",
    "prettier": "^3.5.3",
    "prettier-plugin-organize-imports": "^4.0.0",
    "react": "^18.3.1",
    "react-dom": "^18.3.1",
    "source-map-js": "^1.2.0",
    "typescript": "^5.7.2"
  },
  "resolutions": {
    "bun-types": "workspace:packages/bun-types",
    "@types/bun": "workspace:packages/@types/bun"
  },
  "scripts": {
    "build": "bun run build:debug",
    "watch": "zig build check --watch -fincremental --prominent-compile-errors --global-cache-dir build/debug/zig-check-cache --zig-lib-dir vendor/zig/lib",
    "watch-windows": "zig build check-windows --watch -fincremental --prominent-compile-errors --global-cache-dir build/debug/zig-check-cache --zig-lib-dir vendor/zig/lib",
    "bd:v": "(bun run --silent build:debug &> /tmp/bun.debug.build.log || (cat /tmp/bun.debug.build.log && rm -rf /tmp/bun.debug.build.log && exit 1)) && rm -f /tmp/bun.debug.build.log && ./build/debug/bun-debug",
    "bd": "BUN_DEBUG_QUIET_LOGS=1 bun bd:v",
    "build:debug": "bun ./scripts/build.mjs -GNinja -DCMAKE_BUILD_TYPE=Debug -B build/debug",
    "build:debug:asan": "bun ./scripts/build.mjs -GNinja -DCMAKE_BUILD_TYPE=Debug -DENABLE_ASAN=ON -B build/debug-asan",
    "build:valgrind": "bun ./scripts/build.mjs -GNinja -DCMAKE_BUILD_TYPE=Debug -DENABLE_BASELINE=ON -ENABLE_VALGRIND=ON -B build/debug-valgrind",
    "build:release": "bun ./scripts/build.mjs -GNinja -DCMAKE_BUILD_TYPE=Release -B build/release",
    "build:ci": "bun ./scripts/build.mjs -GNinja -DCMAKE_BUILD_TYPE=Release -DCMAKE_VERBOSE_MAKEFILE=ON -DCI=true -B build/release-ci --verbose --fresh",
    "build:assert": "bun ./scripts/build.mjs -GNinja -DCMAKE_BUILD_TYPE=RelWithDebInfo -DENABLE_ASSERTIONS=ON -DENABLE_LOGS=ON -B build/release-assert",
    "build:asan": "bun ./scripts/build.mjs -GNinja -DCMAKE_BUILD_TYPE=Release -DENABLE_ASSERTIONS=ON -DENABLE_LOGS=OFF -DENABLE_ASAN=ON -DENABLE_LTO=OFF -B build/release-asan",
    "build:logs": "bun ./scripts/build.mjs -GNinja -DCMAKE_BUILD_TYPE=Release -DENABLE_LOGS=ON -B build/release-logs",
    "build:safe": "bun ./scripts/build.mjs -GNinja -DCMAKE_BUILD_TYPE=Release -DZIG_OPTIMIZE=ReleaseSafe -B build/release-safe",
    "build:smol": "bun ./scripts/build.mjs -GNinja -DCMAKE_BUILD_TYPE=MinSizeRel -B build/release-smol",
    "build:local": "bun ./scripts/build.mjs -GNinja -DCMAKE_BUILD_TYPE=Debug -DWEBKIT_LOCAL=ON -B build/debug-local",
    "build:release:local": "bun ./scripts/build.mjs -GNinja -DCMAKE_BUILD_TYPE=Release -DWEBKIT_LOCAL=ON -B build/release-local",
    "build:release:with_logs": "cmake . -DCMAKE_BUILD_TYPE=Release -DENABLE_LOGS=true -GNinja -Bbuild-release && ninja -Cbuild-release",
    "build:debug-zig-release": "cmake . -DCMAKE_BUILD_TYPE=Release -DZIG_OPTIMIZE=Debug -GNinja -Bbuild-debug-zig-release && ninja -Cbuild-debug-zig-release",
    "run:linux": "docker run --rm  -v \"$PWD:/root/bun/\" -w /root/bun ghcr.io/oven-sh/bun-development-docker-image",
    "css-properties": "bun run src/css/properties/generate_properties.ts",
    "uv-posix-stubs": "bun run src/bun.js/bindings/libuv/generate_uv_posix_stubs.ts",
    "bump": "bun ./scripts/bump.ts",
    "typecheck": "tsc --noEmit && cd test && bun run typecheck",
    "fmt": "bun run prettier",
    "fmt:cpp": "bun run clang-format",
    "fmt:zig": "bun run zig-format",
    "lint": "bunx oxlint --config=oxlint.json --format=github src/js",
    "lint:fix": "oxlint --config oxlint.json --fix",
    "test": "node scripts/runner.node.mjs --exec-path ./build/debug/bun-debug",
    "test:release": "node scripts/runner.node.mjs --exec-path ./build/release/bun",
    "banned": "bun test test/internal/ban-words.test.ts",
    "glob-sources": "bun scripts/glob-sources.mjs",
    "zig": "vendor/zig/zig.exe",
    "zig:test": "bun ./scripts/build.mjs -GNinja -DCMAKE_BUILD_TYPE=Debug -DBUN_TEST=ON -B build/debug",
    "zig:test:release": "bun ./scripts/build.mjs -GNinja -DCMAKE_BUILD_TYPE=Release -DBUNTEST=ON -B build/release",
    "zig:test:ci": "bun ./scripts/build.mjs -GNinja -DCMAKE_BUILD_TYPE=Release -DBUN_TEST=ON -DZIG_OPTIMIZE=ReleaseSafe -DCMAKE_VERBOSE_MAKEFILE=ON -DCI=true -B build/release-ci --verbose --fresh",
    "zig:fmt": "bun run zig-format",
    "zig:check": "bun run zig build check --summary new",
    "zig:check-all": "bun run zig build check-all --summary new",
    "zig:check-windows": "bun run zig build check-windows --summary new",
    "analysis": "bun ./scripts/build.mjs -DCMAKE_BUILD_TYPE=Debug -DENABLE_ANALYSIS=ON -DENABLE_CCACHE=OFF -B build/analysis",
    "analysis:no-llvm": "bun run analysis -DENABLE_LLVM=OFF",
    "clang-format": "bun run analysis --target clang-format",
    "clang-format:check": "bun run analysis --target clang-format-check",
    "clang-format:diff": "bun run analysis --target clang-format-diff",
    "clang-tidy": "bun run analysis --target clang-tidy",
    "clang-tidy:check": "bun run analysis --target clang-tidy-check",
    "clang-tidy:diff": "bun run analysis --target clang-tidy-diff",
    "zig-format": "bun run analysis:no-llvm --target zig-format",
    "zig-format:check": "bun run analysis:no-llvm --target zig-format-check",
    "prettier": "bunx prettier@latest --plugin=prettier-plugin-organize-imports --config .prettierrc --write scripts packages src docs 'test/**/*.{test,spec}.{ts,tsx,js,jsx,mts,mjs,cjs,cts}' '!test/**/*fixture*.*'",
    "node:test": "node ./scripts/runner.node.mjs --quiet --exec-path=$npm_execpath --node-tests ",
    "clean:zig": "rm -rf build/debug/cache/zig build/debug/CMakeCache.txt 'build/debug/*.o' .zig-cache zig-out || true",
    "sync-webkit-source": "bun ./scripts/sync-webkit-source.ts"
  }
}
