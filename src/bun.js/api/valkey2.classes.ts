import { define } from "../../codegen/class-definitions";

export default [
  define({
    name: "RedisClient2",
    construct: true,
    constructNeedsThis: true,
    call: false,
    finalize: true,
    configurable: false,
    JSType: "0b11101111",
    memoryCost: true,
    proto: {
      append: { fn: "append" },
      bitcount: { fn: "bitcount" },
      blmove: { fn: "blmove", length: 5 },
      blmpop: { fn: "blmpop", length: 3 },
      blpop: { fn: "blpop", length: 2 },
      brpop: { fn: "brpop", length: 2 },
      brpoplpush: { fn: "brpoplpush", length: 3 },
      bufferedAmount: { getter: "getBufferedAmount" },
      bzmpop: { fn: "bzmpop", length: 3 },
      bzpopmax: { fn: "bzpopmax", length: 2 },
      bzpopmin: { fn: "bzpopmin", length: 2 },
      close: { fn: "close", length: 0 },
      connect: { fn: "connect", length: 0 },
      connected: { getter: "getConnected" },
      copy: { fn: "copy" },
      decr: { fn: "decr", length: 1 },
      decrby: { fn: "decrby", length: 2 },
      del: { fn: "del", length: 1 },
      dump: { fn: "dump" },
      //duplicate: { fn: "duplicate" },
      exists: { fn: "exists", length: 1 },
      expire: { fn: "expire", length: 2 },
      expireat: { fn: "expireat", length: 2 },
      expiretime: { fn: "expiretime" },
      get: { fn: "get", length: 1 },
      getBuffer: { fn: "getBuffer", length: 1 },
      getbit: { fn: "getbit", length: 2 },
      getdel: { fn: "getdel" },
      getex: { fn: "getex" },
      getrange: { fn: "getrange", length: 3 },
      getset: { fn: "getset" },
      hdel: { fn: "hdel", length: 2 },
      hexists: { fn: "hexists", length: 2 },
      hexpire: { fn: "hexpire", length: 3 },
      hexpireat: { fn: "hexpireat", length: 3 },
      hexpiretime: { fn: "hexpiretime", length: 2 },
      hget: { fn: "hget", length: 2 },
      hgetall: { fn: "hgetall" },
      hgetdel: { fn: "hgetdel", length: 2 },
      hgetex: { fn: "hgetex", length: 2 },
      hincrby: { fn: "hincrby", length: 3 },
      hincrbyfloat: { fn: "hincrbyfloat", length: 3 },
      hkeys: { fn: "hkeys" },
      hlen: { fn: "hlen" },
      hmget: { fn: "hmget", length: 2 },
      hmset: { fn: "hmset", length: 2 },
      hpersist: { fn: "hpersist", length: 2 },
      hpexpire: { fn: "hpexpire", length: 3 },
      hpexpireat: { fn: "hpexpireat", length: 3 },
      hpexpiretime: { fn: "hpexpiretime", length: 2 },
      hpttl: { fn: "hpttl", length: 2 },
      hrandfield: { fn: "hrandfield", length: 1 },
      hscan: { fn: "hscan", length: 2 },
      hset: { fn: "hset", length: 2 },
      hsetex: { fn: "hsetex", length: 3 },
      hsetnx: { fn: "hsetnx", length: 3 },
      hstrlen: { fn: "hstrlen" },
      httl: { fn: "httl", length: 2 },
      hvals: { fn: "hvals" },
      incr: { fn: "incr", length: 1 },
      incrby: { fn: "incrby", length: 2 },
      incrbyfloat: { fn: "incrbyfloat", length: 2 },
      keys: { fn: "keys" },
      lindex: { fn: "lindex", length: 2 },
      linsert: { fn: "linsert", length: 4 },
      llen: { fn: "llen" },
      lmove: { fn: "lmove", length: 4 },
      lmpop: { fn: "lmpop", length: 2 },
      lpop: { fn: "lpop" },
      lpos: { fn: "lpos", length: 2 },
      lpush: { fn: "lpush" },
      lpushx: { fn: "lpushx" },
      lrange: { fn: "lrange", length: 3 },
      lrem: { fn: "lrem", length: 3 },
      lset: { fn: "lset", length: 3 },
      ltrim: { fn: "ltrim", length: 3 },
      mget: { fn: "mget" },
      mset: { fn: "mset" },
      msetnx: { fn: "msetnx" },
      //onclose: { getter: "getOnClose", setter: "setOnClose", this: true, cache: true },
      onconnect: { getter: "getOnConnect", setter: "setOnConnect", this: true, cache: true },
      persist: { fn: "persist" },
      pexpire: { fn: "pexpire", length: 2 },
      pexpireat: { fn: "pexpireat", length: 2 },
      pexpiretime: { fn: "pexpiretime" },
      pfadd: { fn: "pfadd" },
      ping: { fn: "ping" },
      psetex: { fn: "psetex", length: 3 },
      //psubscribe: { fn: "psubscribe" },
      pttl: { fn: "pttl" },
      //publish: { fn: "publish" },
      //pubsub: { fn: "pubsub" },
      //punsubscribe: { fn: "punsubscribe" },
      randomkey: { fn: "randomkey", length: 0 },
      rename: { fn: "rename", length: 2 },
      renamenx: { fn: "renamenx", length: 2 },
      rpop: { fn: "rpop" },
      rpoplpush: { fn: "rpoplpush", length: 2 },
      rpush: { fn: "rpush" },
      rpushx: { fn: "rpushx" },
      scan: { fn: "scan" },
      scard: { fn: "scard" },
      script: { fn: "script" },
      sdiff: { fn: "sdiff", length: 1 },
      sdiffstore: { fn: "sdiffstore", length: 2 },
      select: { fn: "select" },
      send: { fn: "send", length: 2 },
      set: { fn: "set", length: 2 },
      setbit: { fn: "setbit", length: 3 },
      setex: { fn: "setex", length: 3 },
      setnx: { fn: "setnx" },
      setrange: { fn: "setrange", length: 3 },
      sinter: { fn: "sinter", length: 1 },
      sintercard: { fn: "sintercard", length: 1 },
      sinterstore: { fn: "sinterstore", length: 2 },
      sadd: { fn: "sadd", length: 2 },
      sismember: { fn: "sismember", length: 2 },
      smembers: { fn: "smembers", length: 1 },
      smismember: { fn: "smismember", length: 2 },
      smove: { fn: "smove" },
      spop: { fn: "spop", length: 1 },
      spublish: { fn: "spublish" },
      srandmember: { fn: "srandmember", length: 1 },
      srem: { fn: "srem", length: 2 },
      sscan: { fn: "sscan", length: 2 },
      strlen: { fn: "strlen" },
      //subscribe: { fn: "subscribe" },
      substr: { fn: "substr" },
      sunion: { fn: "sunion", length: 1 },
      sunionstore: { fn: "sunionstore", length: 2 },
      touch: { fn: "touch" },
      ttl: { fn: "ttl", length: 1 },
      type: { fn: "type", length: 1 },
      unlink: { fn: "unlink" },
      //unsubscribe: { fn: "unsubscribe" },
      zadd: { fn: "zadd", length: 3 },
      zcard: { fn: "zcard" },
      zcount: { fn: "zcount", length: 3 },
      zdiff: { fn: "zdiff", length: 1 },
      zdiffstore: { fn: "zdiffstore", length: 2 },
      zincrby: { fn: "zincrby", length: 3 },
      zinter: { fn: "zinter", length: 2 },
      zintercard: { fn: "zintercard", length: 1 },
      zinterstore: { fn: "zinterstore", length: 3 },
      zlexcount: { fn: "zlexcount", length: 3 },
      zmpop: { fn: "zmpop", length: 2 },
      zmscore: { fn: "zmscore" },
      zpopmax: { fn: "zpopmax" },
      zpopmin: { fn: "zpopmin" },
      zrandmember: { fn: "zrandmember" },
      zrange: { fn: "zrange", length: 3 },
      zrangebylex: { fn: "zrangebylex", length: 3 },
      zrangebyscore: { fn: "zrangebyscore", length: 3 },
      zrangestore: { fn: "zrangestore", length: 4 },
      zrank: { fn: "zrank" },
      zrem: { fn: "zrem", length: 2 },
      zremrangebylex: { fn: "zremrangebylex", length: 3 },
      zremrangebyrank: { fn: "zremrangebyrank", length: 3 },
      zremrangebyscore: { fn: "zremrangebyscore", length: 3 },
      zrevrange: { fn: "zrevrange", length: 3 },
      zrevrangebylex: { fn: "zrevrangebylex", length: 3 },
      zrevrangebyscore: { fn: "zrevrangebyscore", length: 3 },
      zrevrank: { fn: "zrevrank" },
      zscan: { fn: "zscan", length: 2 },
      zscore: { fn: "zscore" },
      zunion: { fn: "zunion", length: 2 },
      zunionstore: { fn: "zunionstore", length: 3 },
    },
    //values: ["onconnect", "onclose", "connectionPromise", "hello", "subscriptionCallbackMap"],
    values: [
      "connectionPromise", // Used to track the progress of the connection. Not exposed to JS.
    ],
  }),
];
