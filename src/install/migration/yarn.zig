const std = @import("std");

/// A Scanner for yarn lockfile v1.
pub const Scanner = struct {
    pub const Token = union(enum) {
        at,
        colon,
        comma,
        space,

        comment: []const u8,
        literal: []const u8,
        string: []const u8,

        end_of_file,
    };

    source: []const u8,
    pos: usize = 0,
    state: union(enum) {
        start,
        comment: usize,
        literal: usize,
        string: usize,
    } = .start,
    head: ?Token = null,

    pub fn init(source: []const u8) Scanner {
        return Scanner{ .source = source };
    }

    pub fn peek(self: *Scanner) Token {
        if (self.head) |head| {
            return head;
        }

        self.head = self.next();
        return self.head.?;
    }

    pub fn next(self: *Scanner) Token {
        if (self.head) |head| {
            self.head = null;
            return head;
        }

        while (self.pos < self.source.len) {
            const c = self.source[self.pos];
            switch (self.state) {
                .start => {
                    switch (c) {
                        '#' => {
                            self.state = .{ .comment = self.pos };
                            self.pos += 1;
                        },
                        ' ' => {
                            self.pos += 1;
                            return .space;
                        },
                        '@' => {
                            self.pos += 1;
                            return .at;
                        },
                        ':' => {
                            self.pos += 1;
                            return .colon;
                        },
                        ',' => {
                            self.pos += 1;
                            return .comma;
                        },
                        '"' => {
                            self.state = .{ .string = self.pos };
                            self.pos += 1;
                        },
                        'a'...'z', '0'...'9', '^', '>', '=' => {
                            self.state = .{ .literal = self.pos };
                            self.pos += 1;
                        },
                        else => {
                            self.pos += 1;
                        },
                    }
                },
                .comment => |start| switch (c) {
                    '\n' => {
                        const comment = self.source[start..self.pos];
                        self.state = .start;
                        self.pos += 1;
                        return .{ .comment = comment };
                    },
                    else => {
                        self.pos += 1;
                    },
                },
                .literal => |start| switch (c) {
                    'a'...'z',
                    'A'...'Z',
                    '0'...'9',
                    '+',
                    '=',
                    '-',
                    '/',
                    '_',
                    '.',
                    => {
                        self.pos += 1;
                    },
                    else => {
                        const literal = self.source[start..self.pos];
                        self.state = .start;
                        return .{ .literal = literal };
                    },
                },
                .string => |start| switch (c) {
                    '"' => {
                        self.pos += 1;
                        const string = self.source[start..self.pos];
                        self.state = .start;
                        return .{ .string = string };
                    },
                    else => {
                        self.pos += 1;
                    },
                },
            }
        }

        return .end_of_file;
    }
};

const testing = std.testing;

test Scanner {
    const lockfile =
        \\# THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.
        \\# yarn lockfile v1
        \\package-1@^1.0.0:
        \\  version "1.0.3"
        \\  resolved "https://registry.npmjs.org/package-1/-/package-1-1.0.3.tgz#a1b2c3d4e5f6g7h8i9j0k1l2m3n4o5p6q7r8s9t0"
        \\package-2@^2.0.0:
        \\  version "2.0.1"
        \\  resolved "https://registry.npmjs.org/package-2/-/package-2-2.0.1.tgz#a1b2c3d4e5f6g7h8i9j0k1l2m3n4o5p6q7r8s9t0"
        \\  dependencies:
        \\    package-4 "^4.0.0"
        \\package-3@^3.0.0:
        \\  version "3.1.9"
        \\  resolved "https://registry.npmjs.org/package-3/-/package-3-3.1.9.tgz#a1b2c3d4e5f6g7h8i9j0k1l2m3n4o5p6q7r8s9t0"
        \\  dependencies:
        \\    package-4 "^4.5.0"
        \\package-4@^4.0.0, package-4@^4.5.0:
        \\  version "4.6.3"
        \\  resolved "https://registry.npmjs.org/package-4/-/package-4-2.6.3.tgz#a1b2c3d4e5f6g7h8i9j0k1l2m3n4o5p6q7r8s9t0"
    ;

    var scanner = Scanner.init(lockfile);

    try testing.expectEqualStrings("# THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.", scanner.next().comment);
    try testing.expectEqualStrings("# yarn lockfile v1", scanner.next().comment);

    try testing.expectEqualStrings("package-1", scanner.next().literal);
    try testing.expectEqual(.at, scanner.next());
    try testing.expectEqualStrings("^1.0.0", scanner.next().literal);
    try testing.expectEqual(.colon, scanner.next());
    {
        try testing.expectEqual(.space, scanner.next());
        try testing.expectEqual(.space, scanner.next());
        try testing.expectEqualStrings("version", scanner.next().literal);
        try testing.expectEqual(.space, scanner.next());
        try testing.expectEqualStrings("\"1.0.3\"", scanner.next().string);

        try testing.expectEqual(.space, scanner.next());
        try testing.expectEqual(.space, scanner.next());
        try testing.expectEqualStrings("resolved", scanner.next().literal);
        try testing.expectEqual(.space, scanner.next());
        try testing.expectEqualStrings("\"https://registry.npmjs.org/package-1/-/package-1-1.0.3.tgz#a1b2c3d4e5f6g7h8i9j0k1l2m3n4o5p6q7r8s9t0\"", scanner.next().string);
    }

    try testing.expectEqualStrings("package-2", scanner.next().literal);
    try testing.expectEqual(.at, scanner.next());
    try testing.expectEqualStrings("^2.0.0", scanner.next().literal);
    try testing.expectEqual(.colon, scanner.next());
    {
        try testing.expectEqual(.space, scanner.next());
        try testing.expectEqual(.space, scanner.next());
        try testing.expectEqualStrings("version", scanner.next().literal);
        try testing.expectEqual(.space, scanner.next());
        try testing.expectEqualStrings("\"2.0.1\"", scanner.next().string);

        try testing.expectEqual(.space, scanner.next());
        try testing.expectEqual(.space, scanner.next());
        try testing.expectEqualStrings("resolved", scanner.next().literal);
        try testing.expectEqual(.space, scanner.next());
        try testing.expectEqualStrings("\"https://registry.npmjs.org/package-2/-/package-2-2.0.1.tgz#a1b2c3d4e5f6g7h8i9j0k1l2m3n4o5p6q7r8s9t0\"", scanner.next().string);

        try testing.expectEqual(.space, scanner.next());
        try testing.expectEqual(.space, scanner.next());
        try testing.expectEqualStrings("dependencies", scanner.next().literal);
        try testing.expectEqual(.colon, scanner.next());

        {
            try testing.expectEqual(.space, scanner.next());
            try testing.expectEqual(.space, scanner.next());
            try testing.expectEqual(.space, scanner.next());
            try testing.expectEqual(.space, scanner.next());
            try testing.expectEqualStrings("package-4", scanner.next().literal);
            try testing.expectEqual(.space, scanner.next());
            try testing.expectEqualStrings("\"^4.0.0\"", scanner.next().string);
        }
    }

    try testing.expectEqualStrings("package-3", scanner.next().literal);
    try testing.expectEqual(.at, scanner.next());
    try testing.expectEqualStrings("^3.0.0", scanner.next().literal);
    try testing.expectEqual(.colon, scanner.next());
    {
        try testing.expectEqual(.space, scanner.next());
        try testing.expectEqual(.space, scanner.next());
        try testing.expectEqualStrings("version", scanner.next().literal);
        try testing.expectEqual(.space, scanner.next());
        try testing.expectEqualStrings("\"3.1.9\"", scanner.next().string);

        try testing.expectEqual(.space, scanner.next());
        try testing.expectEqual(.space, scanner.next());
        try testing.expectEqualStrings("resolved", scanner.next().literal);
        try testing.expectEqual(.space, scanner.next());
        try testing.expectEqualStrings("\"https://registry.npmjs.org/package-3/-/package-3-3.1.9.tgz#a1b2c3d4e5f6g7h8i9j0k1l2m3n4o5p6q7r8s9t0\"", scanner.next().string);

        try testing.expectEqual(.space, scanner.next());
        try testing.expectEqual(.space, scanner.next());
        try testing.expectEqualStrings("dependencies", scanner.next().literal);
        try testing.expectEqual(.colon, scanner.next());

        {
            try testing.expectEqual(.space, scanner.next());
            try testing.expectEqual(.space, scanner.next());
            try testing.expectEqual(.space, scanner.next());
            try testing.expectEqual(.space, scanner.next());
            try testing.expectEqualStrings("package-4", scanner.next().literal);
            try testing.expectEqual(.space, scanner.next());
            try testing.expectEqualStrings("\"^4.5.0\"", scanner.next().string);
        }
    }

    try testing.expectEqualStrings("package-4", scanner.next().literal);
    try testing.expectEqual(.at, scanner.next());
    try testing.expectEqualStrings("^4.0.0", scanner.next().literal);
    try testing.expectEqual(.comma, scanner.next());
    try testing.expectEqual(.space, scanner.next());

    try testing.expectEqualStrings("package-4", scanner.next().literal);
    try testing.expectEqual(.at, scanner.next());
    try testing.expectEqualStrings("^4.5.0", scanner.next().literal);
    try testing.expectEqual(.colon, scanner.next());

    {
        try testing.expectEqual(.space, scanner.next());
        try testing.expectEqual(.space, scanner.next());
        try testing.expectEqualStrings("version", scanner.next().literal);
        try testing.expectEqual(.space, scanner.next());
        try testing.expectEqualStrings("\"4.6.3\"", scanner.next().string);

        try testing.expectEqual(.space, scanner.next());
        try testing.expectEqual(.space, scanner.next());
        try testing.expectEqualStrings("resolved", scanner.next().literal);
        try testing.expectEqual(.space, scanner.next());
        try testing.expectEqualStrings("\"https://registry.npmjs.org/package-4/-/package-4-2.6.3.tgz#a1b2c3d4e5f6g7h8i9j0k1l2m3n4o5p6q7r8s9t0\"", scanner.next().string);
    }

    try testing.expectEqual(.end_of_file, scanner.next());
}

test "entry with integrity" {
    const lockfile =
        \\undici@^5.28.4:
        \\  version "5.28.4"
        \\  resolved "https://registry.yarnpkg.com/undici/-/undici-5.28.4.tgz#6b280408edb6a1a604a9b20340f45b422e373068"
        \\  integrity sha512-72RFADWFqKmUb2hmmvNODKL3p9hcB6Gt2DOQMis1SEBaV6a4MH8soBvzg+95CYhCKPFedut2JY9bMfrDl9D23g==
        \\  dependencies:
        \\    "@fastify/busboy" "^2.0.0"
    ;

    var scanner = Scanner.init(lockfile);

    try testing.expectEqualStrings("undici", scanner.next().literal);
    try testing.expectEqual(.at, scanner.next());
    try testing.expectEqualStrings("^5.28.4", scanner.next().literal);
    try testing.expectEqual(.colon, scanner.next());
    {
        try testing.expectEqual(.space, scanner.next());
        try testing.expectEqual(.space, scanner.next());
        try testing.expectEqualStrings("version", scanner.next().literal);
        try testing.expectEqual(.space, scanner.next());
        try testing.expectEqualStrings("\"5.28.4\"", scanner.next().string);

        try testing.expectEqual(.space, scanner.next());
        try testing.expectEqual(.space, scanner.next());
        try testing.expectEqualStrings("resolved", scanner.next().literal);
        try testing.expectEqual(.space, scanner.next());
        try testing.expectEqualStrings("\"https://registry.yarnpkg.com/undici/-/undici-5.28.4.tgz#6b280408edb6a1a604a9b20340f45b422e373068\"", scanner.next().string);

        try testing.expectEqual(.space, scanner.next());
        try testing.expectEqual(.space, scanner.next());
        try testing.expectEqualStrings("integrity", scanner.next().literal);
        try testing.expectEqual(.space, scanner.next());
        try testing.expectEqualStrings("sha512-72RFADWFqKmUb2hmmvNODKL3p9hcB6Gt2DOQMis1SEBaV6a4MH8soBvzg+95CYhCKPFedut2JY9bMfrDl9D23g==", scanner.next().literal);

        try testing.expectEqual(.space, scanner.next());
        try testing.expectEqual(.space, scanner.next());
        try testing.expectEqualStrings("dependencies", scanner.next().literal);
        try testing.expectEqual(.colon, scanner.next());

        {
            try testing.expectEqual(.space, scanner.next());
            try testing.expectEqual(.space, scanner.next());
            try testing.expectEqual(.space, scanner.next());
            try testing.expectEqual(.space, scanner.next());
            try testing.expectEqualStrings("\"@fastify/busboy\"", scanner.next().string);
            try testing.expectEqual(.space, scanner.next());
            try testing.expectEqualStrings("\"^2.0.0\"", scanner.next().string);
        }
    }

    try testing.expectEqual(.end_of_file, scanner.next());
}

test "peeking on scanner" {
    const lockfile =
        \\yargs-parser@^21.1.1:
    ;

    var scanner = Scanner.init(lockfile);

    try testing.expectEqualStrings("yargs-parser", scanner.next().literal);

    try testing.expectEqual(.at, scanner.peek());
    try testing.expectEqual(.at, scanner.peek());
    try testing.expectEqual(.at, scanner.next());

    try testing.expectEqualStrings("^21.1.1", scanner.peek().literal);
    try testing.expectEqualStrings("^21.1.1", scanner.next().literal);

    try testing.expectEqual(.colon, scanner.next());

    try testing.expectEqual(.end_of_file, scanner.next());
}
