var i=(C)=>{return import.meta.require(C)};function H(C,U={}){const A=[];if(C instanceof URL)throw new TypeError("Watch URLs are not supported yet");else if(Buffer.isBuffer(C))C=C.toString();else if(typeof C!=="string")throw new TypeError("Expected path to be a string or Buffer");let q=null;if(typeof U==="string")U={encoding:U};const B=S.watch(C,U||{},(z,J)=>{if(A.push({eventType:z,filename:J}),q){const G=q;q=null,G()}});return{[Symbol.asyncIterator](){let z=!1;return{async next(){while(!z){while(A.length){let J=A.shift();if(J.eventType==="close"){z=!0;break}if(J.eventType==="error")throw z=!0,J.filename;return{value:J,done:!1}}await new Promise((J)=>q=J)}return{value:void 0,done:!0}},return(){if(!z){if(B.close(),z=!0,q){const J=q;q=null,J()}}return{value:void 0,done:!0}}}}}}var S=Bun.fs(),D="::bunternal::",g={[D]:(C)=>{return async function(...U){return await 1,C.apply(S,U)}}}[D],I=g(S.accessSync),K=g(S.appendFileSync),L=g(S.closeSync),M=g(S.copyFileSync),N=g(S.existsSync),O=g(S.chownSync),P=g(S.chmodSync),Q=g(S.fchmodSync),V=g(S.fchownSync),X=g(S.fstatSync),Y=g(S.fsyncSync),Z=g(S.ftruncateSync),_=g(S.futimesSync),$=g(S.lchmodSync),T=g(S.lchownSync),W=g(S.linkSync),j=S.lstat.bind(S),k=g(S.mkdirSync),F=g(S.mkdtempSync),h=g(S.openSync),x=g(S.readSync),E=g(S.writeSync),b=S.readdir.bind(S),w=g(S.readFileSync),R=g(S.writeFileSync),u=g(S.readlinkSync),c=g(S.realpathSync),d=g(S.renameSync),a=S.stat.bind(S),v=g(S.symlinkSync),y=g(S.truncateSync),l=g(S.unlinkSync),p=g(S.utimesSync),m=g(S.lutimesSync),n=g(S.rmSync),t=g(S.rmdirSync),r=(C,U,A)=>{return new Promise((q,B)=>{try{var z=S.writevSync(C,U,A)}catch(J){B(J);return}q({bytesWritten:z,buffers:U})})},o=(C,U,A)=>{return new Promise((q,B)=>{try{var z=S.readvSync(C,U,A)}catch(J){B(J);return}q({bytesRead:z,buffers:U})})},s={access:I,appendFile:K,close:L,copyFile:M,exists:N,chown:O,chmod:P,fchmod:Q,fchown:V,fstat:X,fsync:Y,ftruncate:Z,futimes:_,lchmod:$,lchown:T,link:W,lstat:j,mkdir:k,mkdtemp:F,open:h,read:x,write:E,readdir:b,readFile:w,writeFile:R,readlink:u,realpath:c,rename:d,stat:a,symlink:v,truncate:y,unlink:l,utimes:p,lutimes:m,rm:n,rmdir:t,watch:H,writev:r,readv:o,constants,[Symbol.for("CommonJS")]:0};export{r as writev,R as writeFile,E as write,H as watch,p as utimes,l as unlink,y as truncate,v as symlink,a as stat,t as rmdir,n as rm,d as rename,c as realpath,o as readv,u as readlink,b as readdir,w as readFile,x as read,h as open,F as mkdtemp,k as mkdir,m as lutimes,j as lstat,W as link,T as lchown,$ as lchmod,_ as futimes,Z as ftruncate,Y as fsync,X as fstat,V as fchown,Q as fchmod,N as exists,s as default,M as copyFile,L as close,O as chown,P as chmod,K as appendFile,I as access};
