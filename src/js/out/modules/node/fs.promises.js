var B=Bun.fs(),A="::bunternal::",D={[A]:(S)=>{var C={[A]:function(J,b,q){var x;try{x=S.apply(B,q),q=void 0}catch(z){q=void 0,b(z);return}J(x)}}[A];return async function(...J){return await new Promise((b,q)=>{process.nextTick(C,b,q,J)})}}}[A],E=D(B.accessSync),G=D(B.appendFileSync),H=D(B.closeSync),I=D(B.copyFileSync),K=D(B.existsSync),L=D(B.chownSync),M=D(B.chmodSync),N=D(B.fchmodSync),O=D(B.fchownSync),P=D(B.fstatSync),Q=D(B.fsyncSync),R=D(B.ftruncateSync),T=D(B.futimesSync),U=D(B.lchmodSync),V=D(B.lchownSync),W=D(B.linkSync),X=D(B.lstatSync),Y=D(B.mkdirSync),Z=D(B.mkdtempSync),_=D(B.openSync),$=D(B.readSync),j=D(B.writeSync),v=D(B.readdirSync),w=D(B.readFileSync),h=D(B.writeFileSync),k=D(B.readlinkSync),F=D(B.realpathSync),g=D(B.renameSync),u=D(B.statSync),d=D(B.symlinkSync),l=D(B.truncateSync),n=D(B.unlinkSync),c=D(B.utimesSync),a=D(B.lutimesSync),t=D(B.rmSync),y=D(B.rmdirSync),p={access:E,appendFile:G,close:H,copyFile:I,exists:K,chown:L,chmod:M,fchmod:N,fchown:O,fstat:P,fsync:Q,ftruncate:R,futimes:T,lchmod:U,lchown:V,link:W,lstat:X,mkdir:Y,mkdtemp:Z,open:_,read:$,write:j,readdir:v,readFile:w,writeFile:h,readlink:k,realpath:F,rename:g,stat:u,symlink:d,truncate:l,unlink:n,utimes:c,lutimes:a,rm:t,rmdir:y,constants,[Symbol.for("CommonJS")]:0};export{h as writeFile,j as write,c as utimes,n as unlink,l as truncate,d as symlink,u as stat,y as rmdir,t as rm,g as rename,F as realpath,k as readlink,v as readdir,w as readFile,$ as read,_ as open,Z as mkdtemp,Y as mkdir,a as lutimes,X as lstat,W as link,V as lchown,U as lchmod,T as futimes,R as ftruncate,Q as fsync,P as fstat,O as fchown,N as fchmod,K as exists,p as default,I as copyFile,H as close,L as chown,M as chmod,G as appendFile,E as access};
