var o=(g)=>{return import.meta.require(g)};function H(g,q={}){const C=[];if(g instanceof URL)throw new TypeError("Watch URLs are not supported yet");else if(Buffer.isBuffer(g))g=g.toString();else if(typeof g!=="string")throw new TypeError("Expected path to be a string or Buffer");let B=null;if(typeof q==="string")q={encoding:q};return S.watch(g,q||{},(A,z)=>{if(C.push({eventType:A,filename:z}),B){const D=B;B=null,D()}}),{async*[Symbol.asyncIterator](){let A=!1;while(!A){while(C.length){let z=C.shift();if(z.eventType==="close"){A=!0;break}if(z.eventType==="error")throw A=!0,z.filename;yield z}await new Promise((z)=>B=z)}}}}var S=Bun.fs(),G="::bunternal::",U={[G]:(g)=>{return async function(...q){return await 1,g.apply(S,q)}}}[G],I=U(S.accessSync),J=U(S.appendFileSync),K=U(S.closeSync),L=U(S.copyFileSync),M=U(S.existsSync),N=U(S.chownSync),O=U(S.chmodSync),P=U(S.fchmodSync),Q=U(S.fchownSync),V=U(S.fstatSync),X=U(S.fsyncSync),Y=U(S.ftruncateSync),Z=U(S.futimesSync),_=U(S.lchmodSync),$=U(S.lchownSync),T=U(S.linkSync),W=U(S.lstatSync),j=U(S.mkdirSync),x=U(S.mkdtempSync),E=U(S.openSync),F=U(S.readSync),h=U(S.writeSync),k=S.readdir.bind(S),R=U(S.readFileSync),w=U(S.writeFileSync),b=U(S.readlinkSync),u=U(S.realpathSync),c=U(S.renameSync),d=U(S.statSync),v=U(S.symlinkSync),a=U(S.truncateSync),l=U(S.unlinkSync),y=U(S.utimesSync),p=U(S.lutimesSync),m=U(S.rmSync),n=U(S.rmdirSync),t=(g,q,C)=>{return new Promise((B,A)=>{try{var z=S.writevSync(g,q,C)}catch(D){A(D);return}B({bytesWritten:z,buffers:q})})},r=(g,q,C)=>{return new Promise((B,A)=>{try{var z=S.readvSync(g,q,C)}catch(D){A(D);return}B({bytesRead:z,buffers:q})})},i={access:I,appendFile:J,close:K,copyFile:L,exists:M,chown:N,chmod:O,fchmod:P,fchown:Q,fstat:V,fsync:X,ftruncate:Y,futimes:Z,lchmod:_,lchown:$,link:T,lstat:W,mkdir:j,mkdtemp:x,open:E,read:F,write:h,readdir:k,readFile:R,writeFile:w,readlink:b,realpath:u,rename:c,stat:d,symlink:v,truncate:a,unlink:l,utimes:y,lutimes:p,rm:m,rmdir:n,watch:H,writev:t,readv:r,constants,[Symbol.for("CommonJS")]:0};export{t as writev,w as writeFile,h as write,H as watch,y as utimes,l as unlink,a as truncate,v as symlink,d as stat,n as rmdir,m as rm,c as rename,u as realpath,r as readv,b as readlink,k as readdir,R as readFile,F as read,E as open,x as mkdtemp,j as mkdir,p as lutimes,W as lstat,T as link,$ as lchown,_ as lchmod,Z as futimes,Y as ftruncate,X as fsync,V as fstat,Q as fchown,P as fchmod,M as exists,i as default,L as copyFile,K as close,N as chown,O as chmod,J as appendFile,I as access};
