var q=Bun.fs(),W="::bunternal::",_={[W]:(S)=>{var X={[W]:function(b,Y,C){var Z;try{Z=S.apply(q,C),C=void 0}catch(J){C=void 0,Y(J);return}b(Z)}}[W];return async function(...b){return await new Promise((Y,C)=>{process.nextTick(X,Y,C,b)})}}}[W],z=_(q.accessSync),$=_(q.appendFileSync),A=_(q.closeSync),x=_(q.copyFileSync),B=_(q.existsSync),j=_(q.chownSync),D=_(q.chmodSync),v=_(q.fchmodSync),E=_(q.fchownSync),w=_(q.fstatSync),G=_(q.fsyncSync),k=_(q.ftruncateSync),H=_(q.futimesSync),F=_(q.lchmodSync),I=_(q.lchownSync),h=_(q.linkSync),K=_(q.lstatSync),g=_(q.mkdirSync),L=_(q.mkdtempSync),u=_(q.openSync),M=_(q.readSync),d=_(q.writeSync),N=_(q.readdirSync),n=_(q.readFileSync),O=_(q.writeFileSync),l=_(q.readlinkSync),P=_(q.realpathSync),a=_(q.renameSync),Q=_(q.statSync),c=_(q.symlinkSync),R=_(q.truncateSync),t=_(q.unlinkSync),T=_(q.utimesSync),y=_(q.lutimesSync),U=_(q.rmSync),p=_(q.rmdirSync),V={access:z,appendFile:$,close:A,copyFile:x,exists:B,chown:j,chmod:D,fchmod:v,fchown:E,fstat:w,fsync:G,ftruncate:k,futimes:H,lchmod:F,lchown:I,link:h,lstat:K,mkdir:g,mkdtemp:L,open:u,read:M,write:d,readdir:N,readFile:n,writeFile:O,readlink:l,realpath:P,rename:a,stat:Q,symlink:c,truncate:R,unlink:t,utimes:T,lutimes:y,rm:U,rmdir:p,constants,[Symbol.for("CommonJS")]:0};export{O as writeFile,d as write,T as utimes,t as unlink,R as truncate,c as symlink,Q as stat,p as rmdir,U as rm,a as rename,P as realpath,l as readlink,N as readdir,n as readFile,M as read,u as open,L as mkdtemp,g as mkdir,y as lutimes,K as lstat,h as link,I as lchown,F as lchmod,H as futimes,k as ftruncate,G as fsync,w as fstat,E as fchown,v as fchmod,B as exists,V as default,x as copyFile,A as close,j as chown,D as chmod,$ as appendFile,z as access};
