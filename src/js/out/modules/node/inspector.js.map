{
  "version": 3,
  "sources": ["src/js/node/inspector.js", "src/js/node/inspector.js"],
  "sourcesContent": [
    "// Hardcoded module \"node:inspector\" and \"node:inspector/promises\"\n// This is a stub! None of this is actually implemented yet.\n\nfunction hideFromStack(fns) {\n  for (const fn of fns) {\n    Object.defineProperty(fn, \"name\", {\n      value: \"::bunternal::\",\n    });\n  }\n}\n\nclass TODO extends Error {\n  constructor(messageName) {\n    const message = messageName\n      ? `node:inspector ${messageName} is not implemented yet in Bun. Track the status & thumbs up the issue: https://github.com/oven-sh/bun/issues/2445`\n      : `node:inspector is not implemented yet in Bun. Track the status & thumbs up the issue: https://github.com/oven-sh/bun/issues/2445`;\n    super(message);\n    this.name = \"TODO\";\n  }\n}\n\nfunction notimpl(message) {\n  throw new TODO(message);\n}\n\nconst { EventEmitter } = import.meta.require(\"node:events\");\n\nfunction open() {\n  notimpl(\"open\");\n}\n\nfunction close() {\n  notimpl(\"close\");\n}\n\nfunction url() {\n  notimpl(\"url\");\n}\n\nfunction waitForDebugger() {\n  notimpl(\"waitForDebugger\");\n}\n\nclass Session extends EventEmitter {\n  constructor() {\n    super();\n    notimpl(\"Session\");\n  }\n}\n\nconst console = {\n  ...globalThis.console,\n  context: {\n    console: globalThis.console,\n  },\n};\n\nvar defaultObject = {\n  console,\n  open,\n  close,\n  url,\n  waitForDebugger,\n  Session,\n  [Symbol.for(\"CommonJS\")]: 0,\n};\n\nexport { console, open, close, url, waitForDebugger, Session, defaultObject as default };\nhideFromStack([notimpl, TODO.prototype.constructor, open, close, url, waitForDebugger, Session.prototype.constructor]);\n",
  "// Hardcoded module \"node:inspector\" and \"node:inspector/promises\"\n// This is a stub! None of this is actually implemented yet.\n\nfunction hideFromStack(fns) {\n  for (const fn of fns) {\n    Object.defineProperty(fn, \"name\", {\n      value: \"::bunternal::\",\n    });\n  }\n}\n\nclass TODO extends Error {\n  constructor(messageName) {\n    const message = messageName\n      ? `node:inspector ${messageName} is not implemented yet in Bun. Track the status & thumbs up the issue: https://github.com/oven-sh/bun/issues/2445`\n      : `node:inspector is not implemented yet in Bun. Track the status & thumbs up the issue: https://github.com/oven-sh/bun/issues/2445`;\n    super(message);\n    this.name = \"TODO\";\n  }\n}\n\nfunction notimpl(message) {\n  throw new TODO(message);\n}\n\nconst { EventEmitter } = import.meta.require(\"node:events\");\n\nfunction open() {\n  notimpl(\"open\");\n}\n\nfunction close() {\n  notimpl(\"close\");\n}\n\nfunction url() {\n  notimpl(\"url\");\n}\n\nfunction waitForDebugger() {\n  notimpl(\"waitForDebugger\");\n}\n\nclass Session extends EventEmitter {\n  constructor() {\n    super();\n    notimpl(\"Session\");\n  }\n}\n\nconst console = {\n  ...globalThis.console,\n  context: {\n    console: globalThis.console,\n  },\n};\n\nvar defaultObject = {\n  console,\n  open,\n  close,\n  url,\n  waitForDebugger,\n  Session,\n  [Symbol.for(\"CommonJS\")]: 0,\n};\n\nexport { console, open, close, url, waitForDebugger, Session, defaultObject as default };\nhideFromStack([notimpl, TODO.prototype.constructor, open, close, url, waitForDebugger, Session.prototype.constructor]);\n"
  ],
  "mappings": ";;A//////DAGA,IAAS,wBAAa,CAAC,KAAK;AAC1B,aAAW,MAAM,KAAK;AACpB,WAAO,eAAe,IAAI,QAAQ;AAAA,MAChC,OAAO;AAAA,IACT,CAAC;AAAA,EACH;AAAA;AAaF,IAAS,kBAAO,CAAC,SAAS;AACxB,QAAM,IAAI,KAAK,OAAO;AAAA;AAKxB,IAAS,eAAI,GAAG;AACd,UAAQ,MAAM;AAAA;AAGhB,IAAS,gBAAK,GAAG;AACf,UAAQ,OAAO;AAAA;AAGjB,IAAS,cAAG,GAAG;AACb,UAAQ,KAAK;AAAA;AAGf,IAAS,0BAAe,GAAG;AACzB,UAAQ,iBAAiB;AAAA;AA7B3B;AAAA,MAAM,aAAa,MAAM;AAAA,EACvB,WAAW,CAAC,aAAa;AACvB,UAAM,UAAU,cACZ,kBAAkB,kIAClB;AACJ,UAAM,OAAO;AACb,SAAK,OAAO;AAAA;AAEhB;AAMA,MAAQ,iBAAiB,YAAY,QAAQ,aAAa;AAkB1D;AAAA,MAAM,gBAAgB,aAAa;AAAA,EACjC,WAAW,GAAG;AACZ,UAAM;AACN,YAAQ,SAAS;AAAA;AAErB;AAEA,IAAM,UAAU;AAAA,KACX,WAAW;AAAA,EACd,SAAS;AAAA,IACP,SAAS,WAAW;AAAA,EACtB;AACF;AAEA,IAAI,gBAAgB;AAAA,EAClB;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,GACC,OAAO,IAAI,UAAU,IAAI;AAC5B;",
  "debugId": "87710BD4285192C964756e2164756e21",
  "names": []
}