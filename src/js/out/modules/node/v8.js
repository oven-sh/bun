function y(b,q){throw A(y),new x(b,q)}function A(...b){for(let q of b)Object.defineProperty(q,"name",{value:"::bunternal::"})}class x extends Error{code;constructor(b,q){super(b+" is not yet implemented in Bun."+(q?" Track the status & thumbs up the issue: https://github.com/oven-sh/bun/issues/"+q:""));this.name="NotImplementedError",this.code="ERR_NOT_IMPLEMENTED",A(x)}}var J=function(b){y("node:v8 "+b)},X=function(){J("cachedDataVersionTag")},Y=function(){J("getHeapSnapshot")},Z=function(){J("getHeapStatistics")},_=function(){J("getHeapSpaceStatistics")},$=function(){J("getHeapCodeStatistics")},j=function(){J("setFlagsFromString")},O=function(){J("deserialize")},L=function(){J("takeCoverage")},P=function(){J("stopCoverage")},T=function(){J("serialize")},V=function(){J("writeHeapSnapshot")},E=function(){J("setHeapSnapshotNearHeapLimit")};class M{constructor(){J("Deserializer")}}class Q{constructor(){J("Serializer")}}class R extends M{constructor(){super(...arguments)}}class U extends Q{constructor(){super(...arguments)}}class W{constructor(){J("GCProfiler")}}var G={createHook:()=>{J("createHook")},onInit:()=>{J("onInit")},onBefore:()=>{J("onBefore")},onAfter:()=>{J("onAfter")},onSettled:()=>{J("onSettled")}},w={addDeserializeCallback:()=>J("addDeserializeCallback"),addSerializeCallback:()=>J("addSerializeCallback"),setDeserializeMainFunction:()=>J("setDeserializeMainFunction"),isBuildingSnapshot:()=>J("isBuildingSnapshot")},I={cachedDataVersionTag:X,getHeapSnapshot:Y,getHeapStatistics:Z,getHeapSpaceStatistics:_,getHeapCodeStatistics:$,setFlagsFromString:j,deserialize:O,takeCoverage:L,stopCoverage:P,serialize:T,writeHeapSnapshot:V,setHeapSnapshotNearHeapLimit:E,promiseHooks:G,startupSnapshot:w,Deserializer:M,Serializer:Q,[Symbol.for("CommonJS")]:0};A(J,X,Y,Z,_,$,j,O,L,P,T,V,E,M,Q,R,U,W);export{V as writeHeapSnapshot,L as takeCoverage,P as stopCoverage,w as startupSnapshot,E as setHeapSnapshotNearHeapLimit,j as setFlagsFromString,T as serialize,G as promiseHooks,Z as getHeapStatistics,_ as getHeapSpaceStatistics,Y as getHeapSnapshot,$ as getHeapCodeStatistics,O as deserialize,I as default,X as cachedDataVersionTag,Q as Serializer,W as GCProfiler,M as Deserializer,U as DefaultSerializer,R as DefaultDeserializer};
