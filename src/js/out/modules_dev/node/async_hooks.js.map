{
  "version": 3,
  "sources": ["src/js/node/async_hooks.js", "src/js/node/async_hooks.js"],
  "sourcesContent": [
    "// Hardcoded module \"node:async_hooks\"\nvar drainMicrotasks = () => {\n  ({ drainMicrotasks } = import.meta.require(\"bun:jsc\"));\n  drainMicrotasks();\n};\n\nvar notImplemented = () => {\n  console.warn(\"[bun]: async_hooks has not been implemented yet. See https://github.com/oven-sh/bun/issues/1832\");\n  notImplemented = () => {};\n};\n\nclass AsyncLocalStorage {\n  #store;\n  _enabled;\n\n  constructor() {\n    this._enabled = false;\n    this.#store = null;\n  }\n\n  enterWith(store) {\n    this.#store = store;\n    notImplemented();\n\n    return this;\n  }\n\n  exit(cb, ...args) {\n    this.#store = null;\n    notImplemented();\n    typeof cb === \"function\" && cb(...args);\n  }\n\n  run(store, callback, ...args) {\n    if (typeof callback !== \"function\") throw new TypeError(\"ERR_INVALID_CALLBACK\");\n    var result, err;\n\n    process.nextTick(store => {\n      const prev = this.#store;\n      this.enterWith(store);\n      try {\n        result = callback(...args);\n      } catch (e) {\n        err = e;\n      } finally {\n        this.#store = prev;\n      }\n    }, store);\n    drainMicrotasks();\n    if (typeof err !== \"undefined\") {\n      throw err;\n    }\n    return result;\n  }\n\n  getStore() {\n    return this.#store;\n  }\n}\n\nfunction createHook() {\n  return {\n    enable() {\n      notImplemented();\n    },\n    disable() {\n      notImplemented();\n    },\n  };\n}\n\nfunction executionAsyncId() {\n  return 0;\n}\n\nfunction triggerAsyncId() {\n  return 0;\n}\n\nfunction executionAsyncResource() {\n  return null;\n}\n\nconst asyncWrapProviders = {\n  NONE: 0,\n  DIRHANDLE: 1,\n  DNSCHANNEL: 2,\n  ELDHISTOGRAM: 3,\n  FILEHANDLE: 4,\n  FILEHANDLECLOSEREQ: 5,\n  FIXEDSIZEBLOBCOPY: 6,\n  FSEVENTWRAP: 7,\n  FSREQCALLBACK: 8,\n  FSREQPROMISE: 9,\n  GETADDRINFOREQWRAP: 10,\n  GETNAMEINFOREQWRAP: 11,\n  HEAPSNAPSHOT: 12,\n  HTTP2SESSION: 13,\n  HTTP2STREAM: 14,\n  HTTP2PING: 15,\n  HTTP2SETTINGS: 16,\n  HTTPINCOMINGMESSAGE: 17,\n  HTTPCLIENTREQUEST: 18,\n  JSSTREAM: 19,\n  JSUDPWRAP: 20,\n  MESSAGEPORT: 21,\n  PIPECONNECTWRAP: 22,\n  PIPESERVERWRAP: 23,\n  PIPEWRAP: 24,\n  PROCESSWRAP: 25,\n  PROMISE: 26,\n  QUERYWRAP: 27,\n  SHUTDOWNWRAP: 28,\n  SIGNALWRAP: 29,\n  STATWATCHER: 30,\n  STREAMPIPE: 31,\n  TCPCONNECTWRAP: 32,\n  TCPSERVERWRAP: 33,\n  TCPWRAP: 34,\n  TTYWRAP: 35,\n  UDPSENDWRAP: 36,\n  UDPWRAP: 37,\n  SIGINTWATCHDOG: 38,\n  WORKER: 39,\n  WORKERHEAPSNAPSHOT: 40,\n  WRITEWRAP: 41,\n  ZLIB: 42,\n  CHECKPRIMEREQUEST: 43,\n  PBKDF2REQUEST: 44,\n  KEYPAIRGENREQUEST: 45,\n  KEYGENREQUEST: 46,\n  KEYEXPORTREQUEST: 47,\n  CIPHERREQUEST: 48,\n  DERIVEBITSREQUEST: 49,\n  HASHREQUEST: 50,\n  RANDOMBYTESREQUEST: 51,\n  RANDOMPRIMEREQUEST: 52,\n  SCRYPTREQUEST: 53,\n  SIGNREQUEST: 54,\n  TLSWRAP: 55,\n  VERIFYREQUEST: 56,\n  INSPECTORJSBINDING: 57,\n};\n\nclass AsyncResource {\n  constructor(type, triggerAsyncId) {\n    this.type = type;\n    this.triggerAsyncId = triggerAsyncId;\n\n    if (AsyncResource.allowedRunInAsyncScope.has(type)) {\n      this.runInAsyncScope = this.#runInAsyncScope;\n    }\n  }\n\n  type;\n  triggerAsyncId;\n\n  // We probably will not fully support AsyncResource\n  // But some packages in the wild do depend on it\n  static allowedRunInAsyncScope = new Set([\"prisma-client-request\"]);\n\n  emitBefore() {\n    return true;\n  }\n\n  emitAfter() {\n    return true;\n  }\n\n  emitDestroy() {}\n\n  runInAsyncScope;\n\n  #runInAsyncScope(fn, ...args) {\n    notImplemented();\n    var result, err;\n    process.nextTick(fn => {\n      try {\n        result = fn(...args);\n      } catch (err2) {\n        err = err2;\n      }\n    }, fn);\n    drainMicrotasks();\n    if (err) throw err;\n    return result;\n  }\n\n  asyncId() {\n    return 0;\n  }\n}\n\nexport {\n  AsyncLocalStorage,\n  createHook,\n  executionAsyncId,\n  triggerAsyncId,\n  executionAsyncResource,\n  asyncWrapProviders,\n  AsyncResource,\n};\n\nexport default {\n  AsyncLocalStorage,\n  createHook,\n  executionAsyncId,\n  triggerAsyncId,\n  executionAsyncResource,\n  asyncWrapProviders,\n  AsyncResource,\n  [Symbol.toStringTag]: \"Module (not implemented yet)\",\n  [Symbol.for(\"CommonJS\")]: 0,\n};\n",
  "// Hardcoded module \"node:async_hooks\"\nvar drainMicrotasks = () => {\n  ({ drainMicrotasks } = import.meta.require(\"bun:jsc\"));\n  drainMicrotasks();\n};\n\nvar notImplemented = () => {\n  console.warn(\"[bun]: async_hooks has not been implemented yet. See https://github.com/oven-sh/bun/issues/1832\");\n  notImplemented = () => {};\n};\n\nclass AsyncLocalStorage {\n  #store;\n  _enabled;\n\n  constructor() {\n    this._enabled = false;\n    this.#store = null;\n  }\n\n  enterWith(store) {\n    this.#store = store;\n    notImplemented();\n\n    return this;\n  }\n\n  exit(cb, ...args) {\n    this.#store = null;\n    notImplemented();\n    typeof cb === \"function\" && cb(...args);\n  }\n\n  run(store, callback, ...args) {\n    if (typeof callback !== \"function\") throw new TypeError(\"ERR_INVALID_CALLBACK\");\n    var result, err;\n\n    process.nextTick(store => {\n      const prev = this.#store;\n      this.enterWith(store);\n      try {\n        result = callback(...args);\n      } catch (e) {\n        err = e;\n      } finally {\n        this.#store = prev;\n      }\n    }, store);\n    drainMicrotasks();\n    if (typeof err !== \"undefined\") {\n      throw err;\n    }\n    return result;\n  }\n\n  getStore() {\n    return this.#store;\n  }\n}\n\nfunction createHook() {\n  return {\n    enable() {\n      notImplemented();\n    },\n    disable() {\n      notImplemented();\n    },\n  };\n}\n\nfunction executionAsyncId() {\n  return 0;\n}\n\nfunction triggerAsyncId() {\n  return 0;\n}\n\nfunction executionAsyncResource() {\n  return null;\n}\n\nconst asyncWrapProviders = {\n  NONE: 0,\n  DIRHANDLE: 1,\n  DNSCHANNEL: 2,\n  ELDHISTOGRAM: 3,\n  FILEHANDLE: 4,\n  FILEHANDLECLOSEREQ: 5,\n  FIXEDSIZEBLOBCOPY: 6,\n  FSEVENTWRAP: 7,\n  FSREQCALLBACK: 8,\n  FSREQPROMISE: 9,\n  GETADDRINFOREQWRAP: 10,\n  GETNAMEINFOREQWRAP: 11,\n  HEAPSNAPSHOT: 12,\n  HTTP2SESSION: 13,\n  HTTP2STREAM: 14,\n  HTTP2PING: 15,\n  HTTP2SETTINGS: 16,\n  HTTPINCOMINGMESSAGE: 17,\n  HTTPCLIENTREQUEST: 18,\n  JSSTREAM: 19,\n  JSUDPWRAP: 20,\n  MESSAGEPORT: 21,\n  PIPECONNECTWRAP: 22,\n  PIPESERVERWRAP: 23,\n  PIPEWRAP: 24,\n  PROCESSWRAP: 25,\n  PROMISE: 26,\n  QUERYWRAP: 27,\n  SHUTDOWNWRAP: 28,\n  SIGNALWRAP: 29,\n  STATWATCHER: 30,\n  STREAMPIPE: 31,\n  TCPCONNECTWRAP: 32,\n  TCPSERVERWRAP: 33,\n  TCPWRAP: 34,\n  TTYWRAP: 35,\n  UDPSENDWRAP: 36,\n  UDPWRAP: 37,\n  SIGINTWATCHDOG: 38,\n  WORKER: 39,\n  WORKERHEAPSNAPSHOT: 40,\n  WRITEWRAP: 41,\n  ZLIB: 42,\n  CHECKPRIMEREQUEST: 43,\n  PBKDF2REQUEST: 44,\n  KEYPAIRGENREQUEST: 45,\n  KEYGENREQUEST: 46,\n  KEYEXPORTREQUEST: 47,\n  CIPHERREQUEST: 48,\n  DERIVEBITSREQUEST: 49,\n  HASHREQUEST: 50,\n  RANDOMBYTESREQUEST: 51,\n  RANDOMPRIMEREQUEST: 52,\n  SCRYPTREQUEST: 53,\n  SIGNREQUEST: 54,\n  TLSWRAP: 55,\n  VERIFYREQUEST: 56,\n  INSPECTORJSBINDING: 57,\n};\n\nclass AsyncResource {\n  constructor(type, triggerAsyncId) {\n    this.type = type;\n    this.triggerAsyncId = triggerAsyncId;\n\n    if (AsyncResource.allowedRunInAsyncScope.has(type)) {\n      this.runInAsyncScope = this.#runInAsyncScope;\n    }\n  }\n\n  type;\n  triggerAsyncId;\n\n  // We probably will not fully support AsyncResource\n  // But some packages in the wild do depend on it\n  static allowedRunInAsyncScope = new Set([\"prisma-client-request\"]);\n\n  emitBefore() {\n    return true;\n  }\n\n  emitAfter() {\n    return true;\n  }\n\n  emitDestroy() {}\n\n  runInAsyncScope;\n\n  #runInAsyncScope(fn, ...args) {\n    notImplemented();\n    var result, err;\n    process.nextTick(fn => {\n      try {\n        result = fn(...args);\n      } catch (err2) {\n        err = err2;\n      }\n    }, fn);\n    drainMicrotasks();\n    if (err) throw err;\n    return result;\n  }\n\n  asyncId() {\n    return 0;\n  }\n}\n\nexport {\n  AsyncLocalStorage,\n  createHook,\n  executionAsyncId,\n  triggerAsyncId,\n  executionAsyncResource,\n  asyncWrapProviders,\n  AsyncResource,\n};\n\nexport default {\n  AsyncLocalStorage,\n  createHook,\n  executionAsyncId,\n  triggerAsyncId,\n  executionAsyncResource,\n  asyncWrapProviders,\n  AsyncResource,\n  [Symbol.toStringTag]: \"Module (not implemented yet)\",\n  [Symbol.for(\"CommonJS\")]: 0,\n};\n"
  ],
  "mappings": "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",
  "debugId": "248E760CBB05B0E264756e2164756e21",
  "names": []
}