{
  "version": 3,
  "sources": ["src/js/node/cluster.ts", "src/js/shared.ts", "src/js/node/cluster.ts"],
  "sourcesContent": [
    "// Hardcoded module \"node:cluster\"\n// This is a stub\n// We leave it in here to provide a better error message\n// TODO: implement node cluster\nimport EventEmitter from \"node:events\";\nimport { throwNotImplemented } from \"../shared\";\n\nexport var SCHED_NONE = 0,\n  SCHED_RR = 1,\n  Worker,\n  schedulingPolicy = 2,\n  isWorker = false,\n  isPrimary = true,\n  isMaster = true,\n  cluster;\n\nWorker = function Worker() {\n  throwNotImplemented(\"node:cluster Worker\", 2428);\n};\n\n// TODO: is it okay for this to be a class?\nclass Cluster extends EventEmitter {\n  static isWorker = false;\n  static isPrimary = true;\n  static isMaster = true;\n\n  static Worker = Worker;\n\n  fork() {\n    throwNotImplemented(\"node:cluster\", 2428);\n  }\n\n  disconnect() {\n    throwNotImplemented(\"node:cluster\", 2428);\n  }\n\n  setupMaster() {\n    throwNotImplemented(\"node:cluster\", 2428);\n  }\n\n  settings = {};\n  workers = {};\n  SCHED_NONE = 0;\n  SCHED_RR = 1;\n  schedulingPolicy = 2;\n  // @ts-expect-error\n  [Symbol.for(\"CommonJS\")] = 0;\n}\n\ncluster = new Cluster();\n\nexport { cluster as default };\n",
  "export class NotImplementedError extends Error {\n  code: string;\n  constructor(feature: string, issue?: number) {\n    super(\n      feature +\n        \" is not yet implemented in Bun.\" +\n        (issue ? \" Track the status & thumbs up the issue: https://github.com/oven-sh/bun/issues/\" + issue : \"\"),\n    );\n    this.name = \"NotImplementedError\";\n    this.code = \"ERR_NOT_IMPLEMENTED\";\n\n    // in the definition so that it isn't bundled unless used\n    hideFromStack(NotImplementedError);\n  }\n}\n\nexport function throwNotImplemented(feature: string, issue?: number): never {\n  // in the definition so that it isn't bundled unless used\n  hideFromStack(throwNotImplemented);\n\n  throw new NotImplementedError(feature, issue);\n}\n\nexport function hideFromStack(...fns) {\n  for (const fn of fns) {\n    Object.defineProperty(fn, \"name\", {\n      value: \"::bunternal::\",\n    });\n  }\n}\n",
  "// Hardcoded module \"node:cluster\"\n// This is a stub\n// We leave it in here to provide a better error message\n// TODO: implement node cluster\nimport EventEmitter from \"node:events\";\nimport { throwNotImplemented } from \"../shared\";\n\nexport var SCHED_NONE = 0,\n  SCHED_RR = 1,\n  Worker,\n  schedulingPolicy = 2,\n  isWorker = false,\n  isPrimary = true,\n  isMaster = true,\n  cluster;\n\nWorker = function Worker() {\n  throwNotImplemented(\"node:cluster Worker\", 2428);\n};\n\n// TODO: is it okay for this to be a class?\nclass Cluster extends EventEmitter {\n  static isWorker = false;\n  static isPrimary = true;\n  static isMaster = true;\n\n  static Worker = Worker;\n\n  fork() {\n    throwNotImplemented(\"node:cluster\", 2428);\n  }\n\n  disconnect() {\n    throwNotImplemented(\"node:cluster\", 2428);\n  }\n\n  setupMaster() {\n    throwNotImplemented(\"node:cluster\", 2428);\n  }\n\n  settings = {};\n  workers = {};\n  SCHED_NONE = 0;\n  SCHED_RR = 1;\n  schedulingPolicy = 2;\n  // @ts-expect-error\n  [Symbol.for(\"CommonJS\")] = 0;\n}\n\ncluster = new Cluster();\n\nexport { cluster as default };\n"
  ],
  "mappings": ";;A//////DAIA;;;A9/////DJgBO,SAAS,mBAAmB,CAAC,SAAiB,OAAuB;AAI1E,QAFA,cAAc,mBAAmB,GAE3B,IAAI,oBAAoB,SAAS,KAAK;AAAA;AAGvC,SAAS,aAAa,IAAI,KAAK;AACpC,WAAW,MAAM;AACf,WAAO,eAAe,IAAI,QAAQ;AAAA,MAChC,OAAO;AAAA,IACT,CAAC;AAAA;AA3BE;AAAA,MAAM,4BAA4B,MAAM;AAAA,EAC7C;AAAA,EACA,WAAW,CAAC,SAAiB,OAAgB;AAC3C,UACE,UACE,qCACC,QAAQ,oFAAoF,QAAQ,GACzG;AACA,SAAK,OAAO,uBACZ,KAAK,OAAO,uBAGZ,cAAc,mBAAmB;AAAA;AAErC;",
  "debugId": "58641C31B94079F464756e2164756e21",
  "names": []
}