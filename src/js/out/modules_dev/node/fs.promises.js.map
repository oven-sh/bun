{
  "version": 3,
  "sources": ["src/js/node/fs.promises.ts"],
  "sourcesContent": [
    "// Hardcoded module \"node:fs/promises\"\n// Note: `constants` is injected into the top of this file\ndeclare var constants: typeof import(\"node:fs/promises\").constants;\n\nvar fs = Bun.fs();\n\n// note: this is not quite the same as how node does it\n// in some cases, node swaps around arguments or makes small tweaks to the return type\n// this is just better than nothing.\nconst notrace = \"::bunternal::\";\nvar promisify = {\n  [notrace]: fsFunction => {\n    // TODO: remove variadic arguments\n    // we can use new Function() here instead\n    // based on fsFucntion.length\n    var func = {\n      [notrace]: function (resolve, reject, args) {\n        var result;\n        try {\n          result = fsFunction.apply(fs, args);\n          args = undefined;\n        } catch (err) {\n          args = undefined;\n          reject(err);\n          return;\n        }\n\n        resolve(result);\n      },\n    }[notrace];\n\n    return async function (...args) {\n      // we await it so that the stack is captured\n      return await new Promise((resolve, reject) => {\n        process.nextTick(func, resolve, reject, args);\n      });\n    };\n  },\n}[notrace];\n\nexport var access = promisify(fs.accessSync),\n  appendFile = promisify(fs.appendFileSync),\n  close = promisify(fs.closeSync),\n  copyFile = promisify(fs.copyFileSync),\n  exists = promisify(fs.existsSync),\n  chown = promisify(fs.chownSync),\n  chmod = promisify(fs.chmodSync),\n  fchmod = promisify(fs.fchmodSync),\n  fchown = promisify(fs.fchownSync),\n  fstat = promisify(fs.fstatSync),\n  fsync = promisify(fs.fsyncSync),\n  ftruncate = promisify(fs.ftruncateSync),\n  futimes = promisify(fs.futimesSync),\n  lchmod = promisify(fs.lchmodSync),\n  lchown = promisify(fs.lchownSync),\n  link = promisify(fs.linkSync),\n  lstat = promisify(fs.lstatSync),\n  mkdir = promisify(fs.mkdirSync),\n  mkdtemp = promisify(fs.mkdtempSync),\n  open = promisify(fs.openSync),\n  read = promisify(fs.readSync),\n  write = promisify(fs.writeSync),\n  readdir = promisify(fs.readdirSync),\n  readFile = promisify(fs.readFileSync),\n  writeFile = promisify(fs.writeFileSync),\n  readlink = promisify(fs.readlinkSync),\n  realpath = promisify(fs.realpathSync),\n  rename = promisify(fs.renameSync),\n  stat = promisify(fs.statSync),\n  symlink = promisify(fs.symlinkSync),\n  truncate = promisify(fs.truncateSync),\n  unlink = promisify(fs.unlinkSync),\n  utimes = promisify(fs.utimesSync),\n  lutimes = promisify(fs.lutimesSync),\n  rm = promisify(fs.rmSync),\n  rmdir = promisify(fs.rmdirSync);\n\nexport default {\n  access,\n  appendFile,\n  close,\n  copyFile,\n  exists,\n  chown,\n  chmod,\n  fchmod,\n  fchown,\n  fstat,\n  fsync,\n  ftruncate,\n  futimes,\n  lchmod,\n  lchown,\n  link,\n  lstat,\n  mkdir,\n  mkdtemp,\n  open,\n  read,\n  write,\n  readdir,\n  readFile,\n  writeFile,\n  readlink,\n  realpath,\n  rename,\n  stat,\n  symlink,\n  truncate,\n  unlink,\n  utimes,\n  lutimes,\n  rm,\n  rmdir,\n  constants,\n  [Symbol.for(\"CommonJS\")]: 0,\n};\n"
  ],
  "mappings": ";;A//////DAIA,IAAI,KAAK,IAAI,GAAG,GAKV,UAAU,iBACZ,YAAY;AAAA,GACb,UAAU,gBAAc;AAIvB,QAAI,OAAO;AAAA,OACR,kBAAmB,CAAC,SAAS,QAAQ,MAAM;AAC1C,YAAI;AACJ,YAAI;AACF,mBAAS,WAAW,MAAM,IAAI,IAAI,GAClC,OAAO;AAAA,iBACA,KAAP;AACA,iBAAO,QACP,OAAO,GAAG;AACV;AAAA;AAGF,gBAAQ,MAAM;AAAA;AAAA,IAElB,EAAE;AAEF,WAAO,cAAe,IAAI,MAAM;AAE9B,aAAO,MAAM,IAAI,QAAQ,CAAC,SAAS,WAAW;AAC5C,gBAAQ,SAAS,MAAM,SAAS,QAAQ,IAAI;AAAA,OAC7C;AAAA;AAAA;AAGP,EAAE,UAES,SAAS,UAAU,GAAG,UAAU,GACzC,aAAa,UAAU,GAAG,cAAc,GACxC,QAAQ,UAAU,GAAG,SAAS,GAC9B,WAAW,UAAU,GAAG,YAAY,GACpC,SAAS,UAAU,GAAG,UAAU,GAChC,QAAQ,UAAU,GAAG,SAAS,GAC9B,QAAQ,UAAU,GAAG,SAAS,GAC9B,SAAS,UAAU,GAAG,UAAU,GAChC,SAAS,UAAU,GAAG,UAAU,GAChC,QAAQ,UAAU,GAAG,SAAS,GAC9B,QAAQ,UAAU,GAAG,SAAS,GAC9B,YAAY,UAAU,GAAG,aAAa,GACtC,UAAU,UAAU,GAAG,WAAW,GAClC,SAAS,UAAU,GAAG,UAAU,GAChC,SAAS,UAAU,GAAG,UAAU,GAChC,OAAO,UAAU,GAAG,QAAQ,GAC5B,QAAQ,UAAU,GAAG,SAAS,GAC9B,QAAQ,UAAU,GAAG,SAAS,GAC9B,UAAU,UAAU,GAAG,WAAW,GAClC,OAAO,UAAU,GAAG,QAAQ,GAC5B,OAAO,UAAU,GAAG,QAAQ,GAC5B,QAAQ,UAAU,GAAG,SAAS,GAC9B,UAAU,UAAU,GAAG,WAAW,GAClC,WAAW,UAAU,GAAG,YAAY,GACpC,YAAY,UAAU,GAAG,aAAa,GACtC,WAAW,UAAU,GAAG,YAAY,GACpC,WAAW,UAAU,GAAG,YAAY,GACpC,SAAS,UAAU,GAAG,UAAU,GAChC,OAAO,UAAU,GAAG,QAAQ,GAC5B,UAAU,UAAU,GAAG,WAAW,GAClC,WAAW,UAAU,GAAG,YAAY,GACpC,SAAS,UAAU,GAAG,UAAU,GAChC,SAAS,UAAU,GAAG,UAAU,GAChC,UAAU,UAAU,GAAG,WAAW,GAClC,KAAK,UAAU,GAAG,MAAM,GACxB,QAAQ,UAAU,GAAG,SAAS,GAJ/B;AAAA,EAOC;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,GACC,OAAO,IAAI,UAAU,IAAI;AAC5B;",
  "debugId": "B40B3CF26A232CDD64756e2164756e21",
  "names": []
}