{
  "version": 3,
  "sources": ["src/js/thirdparty/undici.js"],
  "sourcesContent": [
    "// const { Object } = import.meta.primordials;\nconst { EventEmitter } = import.meta.require(\"events\");\nconst {\n  Readable,\n  [Symbol.for(\"::bunternal::\")]: { _ReadableFromWeb },\n} = import.meta.require(\"node:stream\");\n\nconst ObjectCreate = Object.create;\nconst kEmptyObject = ObjectCreate(null);\n\nexport var fetch = Bun.fetch;\nexport var Response = globalThis.Response;\nexport var Headers = globalThis.Headers;\nexport var Request = globalThis.Request;\nexport var URLSearchParams = globalThis.URLSearchParams;\nexport var URL = globalThis.URL;\nexport class File extends Blob {}\nexport class FileReader extends EventTarget {\n  constructor() {\n    throw new Error(\"Not implemented yet!\");\n  }\n}\n\nexport var FormData = globalThis.FormData;\nfunction notImplemented() {\n  throw new Error(\"Not implemented in bun\");\n}\n\n/**\n * An object representing a URL.\n * @typedef {Object} UrlObject\n * @property {string | number} [port]\n * @property {string} [path]\n * @property {string} [pathname]\n * @property {string} [hostname]\n * @property {string} [origin]\n * @property {string} [protocol]\n * @property {string} [search]\n */\n\n/**\n * @typedef {import('http').IncomingHttpHeaders} IncomingHttpHeaders\n * @typedef {'GET' | 'HEAD' | 'POST' | 'PUT' | 'DELETE' | 'CONNECT' | 'OPTIONS' | 'TRACE' | 'PATCH'} HttpMethod\n * @typedef {import('stream').Readable} Readable\n * @typedef {import('events').EventEmitter} EventEmitter\n */\n\nclass BodyReadable extends _ReadableFromWeb {\n  #response;\n  #bodyUsed;\n\n  constructor(response, options = {}) {\n    var { body } = response;\n    if (!body) throw new Error(\"Response body is null\");\n    super(options, body);\n\n    this.#response = response;\n    this.#bodyUsed = response.bodyUsed;\n  }\n\n  get bodyUsed() {\n    // return this.#response.bodyUsed;\n    return this.#bodyUsed;\n  }\n\n  #consume() {\n    if (this.#bodyUsed) throw new TypeError(\"unusable\");\n    this.#bodyUsed = true;\n  }\n\n  async arrayBuffer() {\n    this.#consume();\n    return await this.#response.arrayBuffer();\n  }\n\n  async blob() {\n    this.#consume();\n    return await this.#response.blob();\n  }\n\n  async formData() {\n    this.#consume();\n    return await this.#response.formData();\n  }\n\n  async json() {\n    this.#consume();\n    return await this.#response.json();\n  }\n\n  async text() {\n    this.#consume();\n    return await this.#response.text();\n  }\n}\n\n// NOT IMPLEMENTED\n// *   idempotent?: boolean;\n// *   onInfo?: (info: { statusCode: number, headers: Object<string, string | string[]> }) => void;\n// *   opaque?: *;\n// *   responseHeader: 'raw' | null;\n// *   headersTimeout?: number | null;\n// *   bodyTimeout?: number | null;\n// *   upgrade?: boolean | string | null;\n// *   blocking?: boolean;\n\n/**\n * Performs an HTTP request.\n * @param {string | URL | UrlObject} url\n * @param {{\n *   dispatcher: Dispatcher;\n *   method: HttpMethod;\n *   signal?: AbortSignal | EventEmitter | null;\n *   maxRedirections?: number;\n *   body?: string | Buffer | Uint8Array | Readable | null | FormData;\n *   headers?: IncomingHttpHeaders | string[] | null;\n *   query?: Record<string, any>;\n *   reset?: boolean;\n *   throwOnError?: boolean;\n * }} [options]\n * @returns {{\n *   statusCode: number;\n *   headers: IncomingHttpHeaders;\n *   body: ResponseBody;\n *   trailers: Object<string, string>;\n *   opaque: *;\n *   context: Object<string, *>;\n * }}\n */\nexport async function request(\n  url,\n  options = {\n    method: \"GET\",\n    signal: null,\n    headers: null,\n    query: null,\n    // idempotent: false, // GET and HEAD requests are idempotent by default\n    // blocking = false,\n    // upgrade = false,\n    // headersTimeout: 30000,\n    // bodyTimeout: 30000,\n    reset: false,\n    throwOnError: false,\n    body: null,\n    // dispatcher,\n  },\n) {\n  let {\n    method = \"GET\",\n    headers: inputHeaders,\n    query,\n    signal,\n    // idempotent, // GET and HEAD requests are idempotent by default\n    // blocking = false,\n    // upgrade = false,\n    // headersTimeout = 30000,\n    // bodyTimeout = 30000,\n    reset = false,\n    throwOnError = false,\n    body: inputBody,\n    maxRedirections,\n    // dispatcher,\n  } = options;\n\n  // TODO: More validations\n\n  if (typeof url === \"string\") {\n    if (query) url = new URL(url);\n  } else if (typeof url === \"object\" && url !== null) {\n    if (!(url instanceof URL)) {\n      // TODO: Parse undici UrlObject\n      throw new Error(\"not implemented\");\n    }\n  } else throw new TypeError(\"url must be a string, URL, or UrlObject\");\n\n  if (typeof url === \"string\" && query) url = new URL(url);\n  if (typeof url === \"object\" && url !== null && query) if (query) url.search = new URLSearchParams(query).toString();\n\n  method = method && typeof method === \"string\" ? method.toUpperCase() : null;\n  // idempotent = idempotent === undefined ? method === \"GET\" || method === \"HEAD\" : idempotent;\n\n  if (inputBody && (method === \"GET\" || method === \"HEAD\")) {\n    throw new Error(\"Body not allowed for GET or HEAD requests\");\n  }\n\n  if (inputBody && inputBody.read && inputBody instanceof Readable) {\n    // TODO: Streaming via ReadableStream?\n    let data = \"\";\n    inputBody.setEncoding(\"utf8\");\n    for await (const chunk of stream) {\n      data += chunk;\n    }\n    inputBody = new TextEncoder().encode(data);\n  }\n\n  if (maxRedirections !== undefined && Number.isNaN(maxRedirections)) {\n    throw new Error(\"maxRedirections must be a number if defined\");\n  }\n\n  if (signal && !(signal instanceof AbortSignal)) {\n    // TODO: Add support for event emitter signal\n    throw new Error(\"signal must be an instance of AbortSignal\");\n  }\n\n  let resp;\n  /** @type {Response} */\n  const {\n    status: statusCode,\n    headers,\n    trailers,\n  } = (resp = await fetch(url, {\n    signal,\n    mode: \"cors\",\n    method,\n    headers: inputHeaders || kEmptyObject,\n    body: inputBody,\n    redirect: maxRedirections === \"undefined\" || maxRedirections > 0 ? \"follow\" : \"manual\",\n    keepalive: !reset,\n  }));\n\n  // Throw if received 4xx or 5xx response indicating HTTP error\n  if (throwOnError && statusCode >= 400 && statusCode < 600) {\n    throw new Error(`Request failed with status code ${statusCode}`);\n  }\n\n  const body = resp.body ? new BodyReadable(resp) : null;\n\n  return { statusCode, headers: headers.toJSON(), body, trailers, opaque: kEmptyObject, context: kEmptyObject };\n}\n\nexport function stream() {\n  throw new Error(\"Not implemented in bun\");\n}\nexport function pipeline() {\n  throw new Error(\"Not implemented in bun\");\n}\nexport function connect() {\n  throw new Error(\"Not implemented in bun\");\n}\nexport function upgrade() {\n  throw new Error(\"Not implemented in bun\");\n}\n\nexport class MockClient {\n  constructor() {\n    throw new Error(\"Not implemented in bun\");\n  }\n}\nexport class MockPool {\n  constructor() {\n    throw new Error(\"Not implemented in bun\");\n  }\n}\nexport class MockAgent {\n  constructor() {\n    throw new Error(\"Not implemented in bun\");\n  }\n}\n\nexport function mockErrors() {\n  throw new Error(\"Not implemented in bun\");\n}\n\nexport function Undici() {\n  throw new Error(\"Not implemented in bun\");\n}\n\nclass Dispatcher extends EventEmitter {}\nclass Agent extends Dispatcher {}\nclass Pool extends Dispatcher {\n  request() {\n    throw new Error(\"Not implemented in bun\");\n  }\n}\nclass BalancedPool extends Dispatcher {}\nclass Client extends Dispatcher {\n  request() {\n    throw new Error(\"Not implemented in bun\");\n  }\n}\n\nUndici.Dispatcher = Dispatcher;\nUndici.Pool = Pool;\nUndici.BalancedPool = BalancedPool;\nUndici.Client = Client;\nUndici.Agent = Agent;\n\nUndici.buildConnector =\n  Undici.errors =\n  Undici.setGlobalDispatcher =\n  Undici.getGlobalDispatcher =\n  Undici.request =\n  Undici.stream =\n  Undici.pipeline =\n  Undici.connect =\n  Undici.upgrade =\n  Undici.MockClient =\n  Undici.MockPool =\n  Undici.MockAgent =\n  Undici.mockErrors =\n    notImplemented;\n\nUndici.fetch = fetch;\n\nexport default {\n  fetch,\n  Response,\n  Headers,\n  Request,\n  URLSearchParams,\n  URL,\n  File,\n  FileReader,\n  FormData,\n  request,\n  stream,\n  pipeline,\n  connect,\n  upgrade,\n  MockClient,\n  MockPool,\n  MockAgent,\n  mockErrors,\n  Dispatcher,\n  Pool,\n  BalancedPool,\n  Client,\n  Agent,\n  Undici,\n  [Symbol.for(\"CommonJS\")]: 0,\n};\n"
  ],
  "mappings": "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",
  "debugId": "EA66625E62B5113B64756e2164756e21",
  "names": []
}