// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`most types 1`] = `3`;

exports[`most types 2`] = `1`;

exports[`most types 3`] = `2`;

exports[`most types 4`] = `
{
  "a": 1,
  "b": 2,
  "c": 3,
  "d": Any<A>,
  "e": 5,
  "f": 6,
}
`;

exports[`most types 5`] = `
{
  "a": {
    "b": {
      "c": {
        "d": {
          "e": {
            "bigint": Any<BigInt>,
            "f": {
              "g": {
                "compare": "compare",
                "h": {
                  "bool": Any<Boolean>,
                  "i": Any<Date>,
                },
              },
            },
            "ignore1": 234,
            "ignore2": {
              "ignore3": 23421,
              "ignore4": {
                "ignore5": {
                  "ignore6": "hello",
                  "ignore7": "done",
                },
              },
            },
          },
        },
        "num": Any<Number>,
        "string": Any<String>,
      },
    },
    "j": Any<Date>,
  },
  "first": Any<Date>,
}
`;

exports[`most types: Array 1`] = `[]`;

exports[`most types: Array with empty array 1`] = `
[
  [],
]
`;

exports[`most types: Array with multiple empty arrays 1`] = `
[
  [],
  [],
  [],
  [],
]
`;

exports[`most types: Array with nested arrays 1`] = `
[
  1,
  2,
  [
    3,
    4,
  ],
  [
    4,
    [
      5,
      6,
    ],
  ],
  8,
]
`;

exports[`most types: Array2 1`] = `
[
  1,
  2,
  3,
]
`;

exports[`most types: ArrayBuffer 1`] = `ArrayBuffer []`;

exports[`most types: Boolean 1`] = `Boolean {}`;

exports[`most types: Buffer 1`] = `
{
  "data": [],
  "type": "Buffer",
}
`;

exports[`most types: Buffer with property 1`] = `
{
  "data": [
    104,
    101,
    108,
    108,
    111,
  ],
  "type": "Buffer",
}
`;

exports[`most types: Buffer2 1`] = `
{
  "data": [
    104,
    101,
    108,
    108,
    111,
  ],
  "type": "Buffer",
}
`;

exports[`most types: Buffer3 1`] = `
{
  "data": [
    104,
    101,
    108,
    96,
    10,
    10,
    96,
  ],
  "type": "Buffer",
}
`;

exports[`most types: Class 1`] = `
A {
  "a": 1,
  "b": 2,
  "c": 3,
}
`;

exports[`most types: DataView 1`] = `DataView []`;

exports[`most types: Date 1`] = `1970-01-01T00:00:00.000Z`;

exports[`most types: Empty Error 1`] = `[Error]`;

exports[`most types: Error 1`] = `[Error: hello]`;

exports[`most types: Float32Array 1`] = `Float32Array []`;

exports[`most types: Float64Array 1`] = `Float64Array []`;

exports[`most types: Function 1`] = `[Function]`;

exports[`most types: Int8Array 1`] = `Int8Array []`;

exports[`most types: Int8Array with elements 1`] = `
Int8Array [
  1,
  2,
  3,
  4,
]
`;

exports[`most types: Int8Array with one element 1`] = `
Int8Array [
  3,
]
`;

exports[`most types: Int16Array 1`] = `Int16Array []`;

exports[`most types: Int32Array 1`] = `Int32Array []`;

exports[`most types: Map 1`] = `
Map {
  1 => "eight",
  "seven" => "312390840812",
}
`;

exports[`most types: Number 1`] = `Number {}`;

exports[`most types: Object 1`] = `{}`;

exports[`most types: Object with Buffer 1`] = `
{
  "a": {
    "data": [
      104,
      101,
      108,
      108,
      111,
    ],
    "type": "Buffer",
  },
}
`;

exports[`most types: Object with Int8Array 1`] = `
{
  "a": 1,
  "b": Int8Array [
    123,
    -89,
    4,
    34,
  ],
}
`;

exports[`most types: Object with String with property 1`] = `
{
  "a": String {},
}
`;

exports[`most types: Object with empty Buffer 1`] = `
{
  "a": {
    "data": [],
    "type": "Buffer",
  },
}
`;

exports[`most types: Object with empty String 1`] = `
{
  "a": String {},
}
`;

exports[`most types: Object with empty object 1`] = `
{
  "a": {},
}
`;

exports[`most types: Object2 1`] = `
{
  "a": 1,
  "b": 2,
}
`;

exports[`most types: Promise 1`] = `Promise {}`;

exports[`most types: RegExp 1`] = `/hello/`;

exports[`most types: Set 1`] = `Set {}`;

exports[`most types: Set2 1`] = `
Set {
  1,
  2,
  3,
  4,
  5,
  6,
  7,
  8,
  9,
}
`;

exports[`most types: String 1`] = `
String {
  "0": "h",
  "1": "e",
  "2": "l",
  "3": "l",
  "4": "o",
}
`;

exports[`most types: String with property 1`] = `String {}`;

exports[`most types: Uint8Array 1`] = `Uint8Array []`;

exports[`most types: Uint8ClampedArray 1`] = `Uint8ClampedArray []`;

exports[`most types: Uint16Array 1`] = `Uint16Array []`;

exports[`most types: Uint32Array 1`] = `Uint32Array []`;

exports[`most types: WeakMap 1`] = `WeakMap {}`;

exports[`most types: WeakSet 1`] = `WeakSet {}`;

exports[`most types: arrow function 1`] = `[Function]`;

exports[`most types: empty map 1`] = `Map {}`;

exports[`most types: nested object with Buffer 1`] = `
{
  "a": {
    "b": {
      "data": [
        104,
        101,
        108,
        108,
        111,
      ],
      "type": "Buffer",
    },
  },
}
`;

exports[`most types: nested object with empty Buffer 1`] = `
{
  "a": {
    "b": {
      "data": [],
      "type": "Buffer",
    },
  },
}
`;

exports[`most types: nested object with empty Int8Array 1`] = `
{
  "a": {
    "b": Int8Array [],
  },
}
`;

exports[`most types: null 1`] = `null`;

exports[`most types: string 1`] = `"hello string"`;

exports[`most types: testing 4 1`] = `6`;

exports[`most types: testing 4 2`] = `4`;

exports[`most types: testing 5 1`] = `5`;

exports[`most types: testing 7 1`] = `7`;

exports[`most types: testing 7 2`] = `9`;

exports[`most types: testing 7 3`] = `8`;

exports[`most types: undefined 1`] = `undefined`;
